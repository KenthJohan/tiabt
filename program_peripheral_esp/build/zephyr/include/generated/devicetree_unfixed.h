/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/Users/johanast/Documents/RISE/tiabt/program_peripheral_esp/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /memory@20000000
 *   5   /memory@20030000
 *   6   /memory@20038000
 *   7   /clocks
 *   8   /clocks/clk-hsi
 *   9   /clocks/clk-lse
 *   10  /clocks/clk-lsi1
 *   11  /clocks/clk-lsi2
 *   12  /clocks/clk-msi
 *   13  /clocks/pll
 *   14  /cpus
 *   15  /power-states
 *   16  /power-states/state0
 *   17  /power-states/state1
 *   18  /power-states/state2
 *   19  /cpus/cpu@0
 *   20  /gpio_keys
 *   21  /soc
 *   22  /soc/pin-controller@48000000
 *   23  /clocks/clk-hse
 *   24  /soc/rcc@58000000
 *   25  /soc/pin-controller@48000000/gpio@48000800
 *   26  /gpio_keys/button_0
 *   27  /soc/pin-controller@48000000/gpio@48000c00
 *   28  /gpio_keys/button_1
 *   29  /gpio_keys/button_2
 *   30  /leds
 *   31  /soc/pin-controller@48000000/gpio@48000400
 *   32  /leds/led_0
 *   33  /leds/led_1
 *   34  /leds/led_2
 *   35  /soc/interrupt-controller@e000e100
 *   36  /soc/pin-controller@48000000/adc1_in3_pc2
 *   37  /soc/adc@50040000
 *   38  /soc/dma@40020000
 *   39  /soc/dma@40020400
 *   40  /soc/dmamux@40020800
 *   41  /soc/pin-controller@48000000/i2c1_scl_pb8
 *   42  /soc/pin-controller@48000000/i2c1_sda_pb9
 *   43  /soc/i2c@40005400
 *   44  /soc/pin-controller@48000000/i2c3_scl_pc0
 *   45  /soc/pin-controller@48000000/i2c3_sda_pc1
 *   46  /soc/i2c@40005c00
 *   47  /soc/interrupt-controller@58000800
 *   48  /soc/quadspi@a0001000
 *   49  /soc/rng@58001000
 *   50  /soc/rtc@40002800
 *   51  /soc/pin-controller@48000000/lpuart1_rx_pa3
 *   52  /soc/pin-controller@48000000/lpuart1_tx_pa2
 *   53  /soc/serial@40008000
 *   54  /soc/pin-controller@48000000/usart1_rx_pb7
 *   55  /soc/pin-controller@48000000/usart1_tx_pb6
 *   56  /soc/serial@40013800
 *   57  /soc/spi@40003800
 *   58  /soc/pin-controller@48000000/spi1_miso_pa6
 *   59  /soc/pin-controller@48000000/spi1_mosi_pa7
 *   60  /soc/pin-controller@48000000/spi1_nss_pa4
 *   61  /soc/pin-controller@48000000/spi1_sck_pa5
 *   62  /soc/spi@40013000
 *   63  /soc/timer@e000e010
 *   64  /soc/timers@40007c00
 *   65  /usbphy
 *   66  /soc/pin-controller@48000000/usb_dm_pa11
 *   67  /soc/pin-controller@48000000/usb_dp_pa12
 *   68  /soc/usb@40006800
 *   69  /soc/watchdog@40002c00
 *   70  /soc/watchdog@40003000
 *   71  /soc/flash-controller@58004000
 *   72  /soc/flash-controller@58004000/flash@8000000
 *   73  /soc/flash-controller@58004000/flash@8000000/partitions
 *   74  /soc/flash-controller@58004000/flash@8000000/partitions/partition@0
 *   75  /soc/flash-controller@58004000/flash@8000000/partitions/partition@c000
 *   76  /soc/flash-controller@58004000/flash@8000000/partitions/partition@66000
 *   77  /soc/flash-controller@58004000/flash@8000000/partitions/partition@c0000
 *   78  /soc/flash-controller@58004000/flash@8000000/partitions/partition@c4000
 *   79  /soc/pin-controller@48000000/adc1_in10_pa5
 *   80  /soc/pin-controller@48000000/adc1_in11_pa6
 *   81  /soc/pin-controller@48000000/adc1_in12_pa7
 *   82  /soc/pin-controller@48000000/adc1_in13_pc4
 *   83  /soc/pin-controller@48000000/adc1_in14_pc5
 *   84  /soc/pin-controller@48000000/adc1_in15_pa8
 *   85  /soc/pin-controller@48000000/adc1_in16_pa9
 *   86  /soc/pin-controller@48000000/adc1_in1_pc0
 *   87  /soc/pin-controller@48000000/adc1_in2_pc1
 *   88  /soc/pin-controller@48000000/adc1_in4_pc3
 *   89  /soc/pin-controller@48000000/adc1_in5_pa0
 *   90  /soc/pin-controller@48000000/adc1_in6_pa1
 *   91  /soc/pin-controller@48000000/adc1_in7_pa2
 *   92  /soc/pin-controller@48000000/adc1_in8_pa3
 *   93  /soc/pin-controller@48000000/adc1_in9_pa4
 *   94  /soc/pin-controller@48000000/analog_pa0
 *   95  /soc/pin-controller@48000000/analog_pa1
 *   96  /soc/pin-controller@48000000/analog_pa10
 *   97  /soc/pin-controller@48000000/analog_pa11
 *   98  /soc/pin-controller@48000000/analog_pa12
 *   99  /soc/pin-controller@48000000/analog_pa13
 *   100 /soc/pin-controller@48000000/analog_pa14
 *   101 /soc/pin-controller@48000000/analog_pa15
 *   102 /soc/pin-controller@48000000/analog_pa2
 *   103 /soc/pin-controller@48000000/analog_pa3
 *   104 /soc/pin-controller@48000000/analog_pa4
 *   105 /soc/pin-controller@48000000/analog_pa5
 *   106 /soc/pin-controller@48000000/analog_pa6
 *   107 /soc/pin-controller@48000000/analog_pa7
 *   108 /soc/pin-controller@48000000/analog_pa8
 *   109 /soc/pin-controller@48000000/analog_pa9
 *   110 /soc/pin-controller@48000000/analog_pb0
 *   111 /soc/pin-controller@48000000/analog_pb1
 *   112 /soc/pin-controller@48000000/analog_pb10
 *   113 /soc/pin-controller@48000000/analog_pb11
 *   114 /soc/pin-controller@48000000/analog_pb12
 *   115 /soc/pin-controller@48000000/analog_pb13
 *   116 /soc/pin-controller@48000000/analog_pb14
 *   117 /soc/pin-controller@48000000/analog_pb15
 *   118 /soc/pin-controller@48000000/analog_pb2
 *   119 /soc/pin-controller@48000000/analog_pb3
 *   120 /soc/pin-controller@48000000/analog_pb4
 *   121 /soc/pin-controller@48000000/analog_pb5
 *   122 /soc/pin-controller@48000000/analog_pb6
 *   123 /soc/pin-controller@48000000/analog_pb7
 *   124 /soc/pin-controller@48000000/analog_pb8
 *   125 /soc/pin-controller@48000000/analog_pb9
 *   126 /soc/pin-controller@48000000/analog_pc0
 *   127 /soc/pin-controller@48000000/analog_pc1
 *   128 /soc/pin-controller@48000000/analog_pc10
 *   129 /soc/pin-controller@48000000/analog_pc11
 *   130 /soc/pin-controller@48000000/analog_pc12
 *   131 /soc/pin-controller@48000000/analog_pc13
 *   132 /soc/pin-controller@48000000/analog_pc14
 *   133 /soc/pin-controller@48000000/analog_pc15
 *   134 /soc/pin-controller@48000000/analog_pc2
 *   135 /soc/pin-controller@48000000/analog_pc3
 *   136 /soc/pin-controller@48000000/analog_pc4
 *   137 /soc/pin-controller@48000000/analog_pc5
 *   138 /soc/pin-controller@48000000/analog_pc6
 *   139 /soc/pin-controller@48000000/analog_pd0
 *   140 /soc/pin-controller@48000000/analog_pd1
 *   141 /soc/pin-controller@48000000/analog_pe4
 *   142 /soc/pin-controller@48000000/analog_ph3
 *   143 /soc/pin-controller@48000000/gpio@48000000
 *   144 /soc/pin-controller@48000000/gpio@48001000
 *   145 /soc/pin-controller@48000000/gpio@48001c00
 *   146 /soc/pin-controller@48000000/i2c1_scl_pa9
 *   147 /soc/pin-controller@48000000/i2c1_scl_pb6
 *   148 /soc/pin-controller@48000000/i2c1_sda_pa10
 *   149 /soc/pin-controller@48000000/i2c1_sda_pb7
 *   150 /soc/pin-controller@48000000/i2c3_scl_pa7
 *   151 /soc/pin-controller@48000000/i2c3_scl_pb10
 *   152 /soc/pin-controller@48000000/i2c3_scl_pb13
 *   153 /soc/pin-controller@48000000/i2c3_sda_pb11
 *   154 /soc/pin-controller@48000000/i2c3_sda_pb14
 *   155 /soc/pin-controller@48000000/i2c3_sda_pb4
 *   156 /soc/pin-controller@48000000/lpuart1_cts_pa6
 *   157 /soc/pin-controller@48000000/lpuart1_cts_pb13
 *   158 /soc/pin-controller@48000000/lpuart1_rts_pb1
 *   159 /soc/pin-controller@48000000/lpuart1_rts_pb12
 *   160 /soc/pin-controller@48000000/lpuart1_rx_pa12
 *   161 /soc/pin-controller@48000000/lpuart1_rx_pb10
 *   162 /soc/pin-controller@48000000/lpuart1_rx_pc0
 *   163 /soc/pin-controller@48000000/lpuart1_tx_pb11
 *   164 /soc/pin-controller@48000000/lpuart1_tx_pb5
 *   165 /soc/pin-controller@48000000/lpuart1_tx_pc1
 *   166 /soc/pin-controller@48000000/quadspi_bk1_io0_pb9
 *   167 /soc/pin-controller@48000000/quadspi_bk1_io1_pb8
 *   168 /soc/pin-controller@48000000/quadspi_bk1_io2_pa7
 *   169 /soc/pin-controller@48000000/quadspi_bk1_io3_pa6
 *   170 /soc/pin-controller@48000000/quadspi_bk1_ncs_pa2
 *   171 /soc/pin-controller@48000000/quadspi_bk1_ncs_pb11
 *   172 /soc/pin-controller@48000000/quadspi_clk_pa3
 *   173 /soc/pin-controller@48000000/quadspi_clk_pb10
 *   174 /soc/pin-controller@48000000/spi1_miso_pa11
 *   175 /soc/pin-controller@48000000/spi1_miso_pb4
 *   176 /soc/pin-controller@48000000/spi1_mosi_pa12
 *   177 /soc/pin-controller@48000000/spi1_mosi_pb5
 *   178 /soc/pin-controller@48000000/spi1_nss_pa15
 *   179 /soc/pin-controller@48000000/spi1_nss_pb2
 *   180 /soc/pin-controller@48000000/spi1_sck_pa1
 *   181 /soc/pin-controller@48000000/spi1_sck_pb3
 *   182 /soc/pin-controller@48000000/spi2_miso_pb14
 *   183 /soc/pin-controller@48000000/spi2_miso_pc2
 *   184 /soc/pin-controller@48000000/spi2_mosi_pb15
 *   185 /soc/pin-controller@48000000/spi2_mosi_pc1
 *   186 /soc/pin-controller@48000000/spi2_mosi_pc3
 *   187 /soc/pin-controller@48000000/spi2_nss_pb12
 *   188 /soc/pin-controller@48000000/spi2_nss_pb9
 *   189 /soc/pin-controller@48000000/spi2_nss_pd0
 *   190 /soc/pin-controller@48000000/spi2_sck_pa9
 *   191 /soc/pin-controller@48000000/spi2_sck_pb10
 *   192 /soc/pin-controller@48000000/spi2_sck_pb13
 *   193 /soc/pin-controller@48000000/spi2_sck_pd1
 *   194 /soc/pin-controller@48000000/tim16_ch1_pa6
 *   195 /soc/pin-controller@48000000/tim16_ch1_pb8
 *   196 /soc/pin-controller@48000000/tim16_ch1n_pb6
 *   197 /soc/pin-controller@48000000/tim17_ch1_pa7
 *   198 /soc/pin-controller@48000000/tim17_ch1_pb9
 *   199 /soc/pin-controller@48000000/tim17_ch1n_pb7
 *   200 /soc/pin-controller@48000000/tim1_ch1n_pa7
 *   201 /soc/pin-controller@48000000/tim1_ch1n_pb13
 *   202 /soc/pin-controller@48000000/tim1_ch2_pa9
 *   203 /soc/pin-controller@48000000/tim1_ch2n_pb14
 *   204 /soc/pin-controller@48000000/tim1_ch2n_pb8
 *   205 /soc/pin-controller@48000000/tim1_ch3_pa10
 *   206 /soc/pin-controller@48000000/tim1_ch3n_pb15
 *   207 /soc/pin-controller@48000000/tim1_ch3n_pb9
 *   208 /soc/pin-controller@48000000/tim1_ch4_pa11
 *   209 /soc/pin-controller@48000000/tim2_ch1_pa0
 *   210 /soc/pin-controller@48000000/tim2_ch1_pa5
 *   211 /soc/pin-controller@48000000/tim2_ch2_pa1
 *   212 /soc/pin-controller@48000000/tim2_ch2_pb3
 *   213 /soc/pin-controller@48000000/tim2_ch3_pa2
 *   214 /soc/pin-controller@48000000/tim2_ch3_pb10
 *   215 /soc/pin-controller@48000000/tim2_ch4_pa3
 *   216 /soc/pin-controller@48000000/tim2_ch4_pb11
 *   217 /soc/pin-controller@48000000/usart1_cts_pa11
 *   218 /soc/pin-controller@48000000/usart1_cts_pb4
 *   219 /soc/pin-controller@48000000/usart1_rts_pa12
 *   220 /soc/pin-controller@48000000/usart1_rts_pb3
 *   221 /soc/pin-controller@48000000/usart1_rx_pa10
 *   222 /soc/pin-controller@48000000/usart1_tx_pa9
 *   223 /soc/pin-controller@48000000/usb_noe_pa13
 *   224 /soc/timers@40000000
 *   225 /soc/pin-controller@48000000/tim2_ch1_pa15
 *   226 /soc/timers@40000000/pwm
 *   227 /soc/timers@40012c00
 *   228 /soc/pin-controller@48000000/tim1_ch1_pa8
 *   229 /soc/timers@40012c00/pwm
 *   230 /soc/timers@40014400
 *   231 /soc/timers@40014400/pwm
 *   232 /soc/timers@40014800
 *   233 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_20030000) fn(DT_N_S_memory_20038000) fn(DT_N_S_clocks) fn(DT_N_S_usbphy) fn(DT_N_S_connector) fn(DT_N_S_power_states) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_20030000, __VA_ARGS__) fn(DT_N_S_memory_20038000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_power_states, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_20030000) fn(DT_N_S_memory_20038000) fn(DT_N_S_clocks) fn(DT_N_S_usbphy) fn(DT_N_S_connector) fn(DT_N_S_power_states) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) 
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_20030000, __VA_ARGS__) fn(DT_N_S_memory_20038000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_power_states, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /memory@20000000 */ \
	5, /* /memory@20030000 */ \
	6, /* /memory@20038000 */ \
	7, /* /clocks */ \
	14, /* /cpus */ \
	15, /* /power-states */ \
	20, /* /gpio_keys */ \
	21, /* /soc */ \
	30, /* /leds */ \
	65, /* /usbphy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32wb55rg_nucleo DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_st_stm32wb55rg_nucleo 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32wb55rg-nucleo"}
#define DT_N_P_compatible_IDX_0 "st,stm32wb55rg-nucleo"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE\dts\bindings\gpio\arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 9
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 98304 /* 0x18000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 98304 /* 0x18000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 98304
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@20030000
 *
 * Node identifier: DT_N_S_memory_20030000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20030000_PATH "/memory@20030000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20030000_FULL_NAME "memory@20030000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20030000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20030000_CHILD_IDX 5
#define DT_N_S_memory_20030000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20030000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20030000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20030000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20030000_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20030000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20030000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20030000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_memory_20030000
#define DT_N_INST_1_mmio_sram            DT_N_S_memory_20030000
#define DT_N_NODELABEL_sram1             DT_N_S_memory_20030000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20030000_REG_NUM 1
#define DT_N_S_memory_20030000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20030000_REG_IDX_0_VAL_ADDRESS 537067520 /* 0x20030000 */
#define DT_N_S_memory_20030000_REG_IDX_0_VAL_SIZE 10240 /* 0x2800 */
#define DT_N_S_memory_20030000_RANGES_NUM 0
#define DT_N_S_memory_20030000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20030000_IRQ_NUM 0
#define DT_N_S_memory_20030000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_20030000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20030000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20030000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20030000_P_zephyr_memory_region "SRAM1"
#define DT_N_S_memory_20030000_P_zephyr_memory_region_STRING_TOKEN SRAM1
#define DT_N_S_memory_20030000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM1
#define DT_N_S_memory_20030000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20030000, zephyr_memory_region, 0) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 1) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 2) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 3) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 4)
#define DT_N_S_memory_20030000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20030000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 3, __VA_ARGS__) \
	fn(DT_N_S_memory_20030000, zephyr_memory_region, 4, __VA_ARGS__)
#define DT_N_S_memory_20030000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_20030000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_20030000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_20030000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20030000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_20030000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_20030000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20030000, compatible, 0) \
	fn(DT_N_S_memory_20030000, compatible, 1)
#define DT_N_S_memory_20030000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20030000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20030000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_20030000_P_compatible_LEN 2
#define DT_N_S_memory_20030000_P_compatible_EXISTS 1
#define DT_N_S_memory_20030000_P_reg {537067520 /* 0x20030000 */, 10240 /* 0x2800 */}
#define DT_N_S_memory_20030000_P_reg_IDX_0 537067520
#define DT_N_S_memory_20030000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20030000_P_reg_IDX_1 10240
#define DT_N_S_memory_20030000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20030000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20030000, reg, 0) \
	fn(DT_N_S_memory_20030000, reg, 1)
#define DT_N_S_memory_20030000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20030000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20030000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20030000_P_reg_EXISTS 1
#define DT_N_S_memory_20030000_P_wakeup_source 0
#define DT_N_S_memory_20030000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@20038000
 *
 * Node identifier: DT_N_S_memory_20038000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20038000_PATH "/memory@20038000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20038000_FULL_NAME "memory@20038000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20038000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20038000_CHILD_IDX 6
#define DT_N_S_memory_20038000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20038000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20038000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20038000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20038000_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20038000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20038000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20038000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_memory_20038000
#define DT_N_INST_2_mmio_sram            DT_N_S_memory_20038000
#define DT_N_NODELABEL_sram2             DT_N_S_memory_20038000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20038000_REG_NUM 1
#define DT_N_S_memory_20038000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20038000_REG_IDX_0_VAL_ADDRESS 537100288 /* 0x20038000 */
#define DT_N_S_memory_20038000_REG_IDX_0_VAL_SIZE 20480 /* 0x5000 */
#define DT_N_S_memory_20038000_RANGES_NUM 0
#define DT_N_S_memory_20038000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20038000_IRQ_NUM 0
#define DT_N_S_memory_20038000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_20038000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20038000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20038000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20038000_P_zephyr_memory_region "SRAM2"
#define DT_N_S_memory_20038000_P_zephyr_memory_region_STRING_TOKEN SRAM2
#define DT_N_S_memory_20038000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM2
#define DT_N_S_memory_20038000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20038000, zephyr_memory_region, 0) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 1) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 2) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 3) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 4)
#define DT_N_S_memory_20038000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20038000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 3, __VA_ARGS__) \
	fn(DT_N_S_memory_20038000, zephyr_memory_region, 4, __VA_ARGS__)
#define DT_N_S_memory_20038000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_20038000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_20038000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_20038000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20038000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_20038000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_20038000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20038000, compatible, 0) \
	fn(DT_N_S_memory_20038000, compatible, 1)
#define DT_N_S_memory_20038000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20038000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20038000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_20038000_P_compatible_LEN 2
#define DT_N_S_memory_20038000_P_compatible_EXISTS 1
#define DT_N_S_memory_20038000_P_reg {537100288 /* 0x20038000 */, 20480 /* 0x5000 */}
#define DT_N_S_memory_20038000_P_reg_IDX_0 537100288
#define DT_N_S_memory_20038000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20038000_P_reg_IDX_1 20480
#define DT_N_S_memory_20038000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20038000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20038000, reg, 0) \
	fn(DT_N_S_memory_20038000, reg, 1)
#define DT_N_S_memory_20038000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20038000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20038000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20038000_P_reg_EXISTS 1
#define DT_N_S_memory_20038000_P_wakeup_source 0
#define DT_N_S_memory_20038000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 7
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_msi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi1) fn(DT_N_S_clocks_S_clk_lsi2) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi2, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lse) 
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	8, /* /clocks/clk-hsi */ \
	9, /* /clocks/clk-lse */ \
	10, /* /clocks/clk-lsi1 */ \
	11, /* /clocks/clk-lsi2 */ \
	12, /* /clocks/clk-msi */ \
	13, /* /clocks/pll */ \
	23, /* /clocks/clk-hse */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 3
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse  DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi1
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi1
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi1_PATH "/clocks/clk-lsi1"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi1_FULL_NAME "clk-lsi1"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi1_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi1_CHILD_IDX 4
#define DT_N_S_clocks_S_clk_lsi1_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi1_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi1_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi1_EXISTS 1
#define DT_N_INST_3_fixed_clock DT_N_S_clocks_S_clk_lsi1
#define DT_N_NODELABEL_clk_lsi1 DT_N_S_clocks_S_clk_lsi1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi1_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi1_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi1_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi1_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi1_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi1_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi1_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi2
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi2
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi2_PATH "/clocks/clk-lsi2"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi2_FULL_NAME "clk-lsi2"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi2_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi2_CHILD_IDX 5
#define DT_N_S_clocks_S_clk_lsi2_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi2_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi2_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi2_EXISTS 1
#define DT_N_INST_4_fixed_clock DT_N_S_clocks_S_clk_lsi2
#define DT_N_NODELABEL_clk_lsi2 DT_N_S_clocks_S_clk_lsi2

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi2_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi2_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi2_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi2_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi2_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi2_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi2_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-msi
 *
 * Node identifier: DT_N_S_clocks_S_clk_msi
 *
 * Binding (compatible = st,stm32-msi-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-msi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_msi_PATH "/clocks/clk-msi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_msi_FULL_NAME "clk-msi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_msi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_msi_CHILD_IDX 2
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_msi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_msi_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_msi_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_msi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_msi_EXISTS 1
#define DT_N_INST_0_st_stm32_msi_clock DT_N_S_clocks_S_clk_msi
#define DT_N_NODELABEL_clk_msi         DT_N_S_clocks_S_clk_msi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_msi_REG_NUM 0
#define DT_N_S_clocks_S_clk_msi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_msi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_msi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_msi_COMPAT_MATCHES_st_stm32_msi_clock 1
#define DT_N_S_clocks_S_clk_msi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_msi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_msi_P_msi_range 6
#define DT_N_S_clocks_S_clk_msi_P_msi_range_ENUM_IDX 6
#define DT_N_S_clocks_S_clk_msi_P_msi_range_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_msi_pll_mode 0
#define DT_N_S_clocks_S_clk_msi_P_msi_pll_mode_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_status "disabled"
#define DT_N_S_clocks_S_clk_msi_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_msi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_msi_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msi, status, 0) \
	fn(DT_N_S_clocks_S_clk_msi, status, 1) \
	fn(DT_N_S_clocks_S_clk_msi, status, 2) \
	fn(DT_N_S_clocks_S_clk_msi, status, 3) \
	fn(DT_N_S_clocks_S_clk_msi, status, 4) \
	fn(DT_N_S_clocks_S_clk_msi, status, 5) \
	fn(DT_N_S_clocks_S_clk_msi, status, 6) \
	fn(DT_N_S_clocks_S_clk_msi, status, 7)
#define DT_N_S_clocks_S_clk_msi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msi, status, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 3, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 4, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 5, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 6, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_clk_msi, status, 7, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_compatible {"st,stm32-msi-clock"}
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0 "st,stm32-msi-clock"
#define DT_N_S_clocks_S_clk_msi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msi, compatible, 0)
#define DT_N_S_clocks_S_clk_msi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_msi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_msi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_msi_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32wb-pll-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32wb-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 6
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32wb_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32wb_pll_clock 1
#define DT_N_S_clocks_S_pll_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_status "disabled"
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0) \
	fn(DT_N_S_clocks_S_pll, status, 1) \
	fn(DT_N_S_clocks_S_pll, status, 2) \
	fn(DT_N_S_clocks_S_pll, status, 3) \
	fn(DT_N_S_clocks_S_pll, status, 4) \
	fn(DT_N_S_clocks_S_pll, status, 5) \
	fn(DT_N_S_clocks_S_pll, status, 6) \
	fn(DT_N_S_clocks_S_pll, status, 7)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 3, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 4, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 5, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 6, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 7, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32wb-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32wb-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	19, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /power-states
 *
 * Node identifier: DT_N_S_power_states
 */

/* Node's full path: */
#define DT_N_S_power_states_PATH "/power-states"

/* Node's name with unit-address: */
#define DT_N_S_power_states_FULL_NAME "power-states"

/* Node parent (/) identifier: */
#define DT_N_S_power_states_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_CHILD_IDX 10
#define DT_N_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2)
#define DT_N_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2) 
#define DT_N_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_power_states_S_state2, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_SUPPORTS_ORDS \
	16, /* /power-states/state0 */ \
	17, /* /power-states/state1 */ \
	18, /* /power-states/state2 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_REG_NUM 0
#define DT_N_S_power_states_RANGES_NUM 0
#define DT_N_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_IRQ_NUM 0
#define DT_N_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /power-states/state0
 *
 * Node identifier: DT_N_S_power_states_S_state0
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE\dts\bindings\power\zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state0_PATH "/power-states/state0"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state0_FULL_NAME "state0"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state0_PARENT DT_N_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_S_state0_CHILD_IDX 0
#define DT_N_S_power_states_S_state0_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state0_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state0_REQUIRES_ORDS \
	15, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state0_SUPPORTS_ORDS \
	19, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state0_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_power_states_S_state0
#define DT_N_NODELABEL_stop0           DT_N_S_power_states_S_state0

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_state0_REG_NUM 0
#define DT_N_S_power_states_S_state0_RANGES_NUM 0
#define DT_N_S_power_states_S_state0_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_state0_IRQ_NUM 0
#define DT_N_S_power_states_S_state0_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_state0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_state0_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state0_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state0_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state0_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state0, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14)
#define DT_N_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state0, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state0_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state0_P_substate_id 1
#define DT_N_S_power_states_S_state0_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state0_P_min_residency_us 100
#define DT_N_S_power_states_S_state0_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /power-states/state1
 *
 * Node identifier: DT_N_S_power_states_S_state1
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE\dts\bindings\power\zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state1_PATH "/power-states/state1"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state1_FULL_NAME "state1"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state1_PARENT DT_N_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_S_state1_CHILD_IDX 1
#define DT_N_S_power_states_S_state1_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state1_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state1_REQUIRES_ORDS \
	15, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state1_SUPPORTS_ORDS \
	19, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state1_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_power_states_S_state1
#define DT_N_NODELABEL_stop1           DT_N_S_power_states_S_state1

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_state1_REG_NUM 0
#define DT_N_S_power_states_S_state1_RANGES_NUM 0
#define DT_N_S_power_states_S_state1_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_state1_IRQ_NUM 0
#define DT_N_S_power_states_S_state1_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_state1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_state1_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state1_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state1_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state1_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state1, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14)
#define DT_N_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state1, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state1_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state1_P_substate_id 2
#define DT_N_S_power_states_S_state1_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state1_P_min_residency_us 500
#define DT_N_S_power_states_S_state1_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /power-states/state2
 *
 * Node identifier: DT_N_S_power_states_S_state2
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE\dts\bindings\power\zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_power_states_S_state2_PATH "/power-states/state2"

/* Node's name with unit-address: */
#define DT_N_S_power_states_S_state2_FULL_NAME "state2"

/* Node parent (/power-states) identifier: */
#define DT_N_S_power_states_S_state2_PARENT DT_N_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_power_states_S_state2_CHILD_IDX 2
#define DT_N_S_power_states_S_state2_FOREACH_CHILD(fn) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_power_states_S_state2_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_power_states_S_state2_REQUIRES_ORDS \
	15, /* /power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_power_states_S_state2_SUPPORTS_ORDS \
	19, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_power_states_S_state2_EXISTS 1
#define DT_N_INST_2_zephyr_power_state DT_N_S_power_states_S_state2
#define DT_N_NODELABEL_stop2           DT_N_S_power_states_S_state2

/* Macros for properties that are special in the specification: */
#define DT_N_S_power_states_S_state2_REG_NUM 0
#define DT_N_S_power_states_S_state2_RANGES_NUM 0
#define DT_N_S_power_states_S_state2_FOREACH_RANGE(fn) 
#define DT_N_S_power_states_S_state2_IRQ_NUM 0
#define DT_N_S_power_states_S_state2_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_power_states_S_state2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_power_states_S_state2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_power_states_S_state2_P_power_state_name "suspend-to-idle"
#define DT_N_S_power_states_S_state2_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state2_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state2_P_power_state_name_ENUM_IDX 2
#define DT_N_S_power_states_S_state2_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_power_states_S_state2_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_power_states_S_state2, power_state_name, 0) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 1) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 2) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 3) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 4) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 5) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 6) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 7) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 8) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 9) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 10) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 11) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 12) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 13) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 14)
#define DT_N_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_power_states_S_state2, power_state_name, 0, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 1, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 2, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 3, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 4, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 5, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 6, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 7, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 8, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 9, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 10, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 11, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 12, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 13, __VA_ARGS__) \
	fn(DT_N_S_power_states_S_state2, power_state_name, 14, __VA_ARGS__)
#define DT_N_S_power_states_S_state2_P_power_state_name_EXISTS 1
#define DT_N_S_power_states_S_state2_P_substate_id 3
#define DT_N_S_power_states_S_state2_P_substate_id_EXISTS 1
#define DT_N_S_power_states_S_state2_P_min_residency_us 900
#define DT_N_S_power_states_S_state2_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	14, /* /cpus */ \
	16, /* /power-states/state0 */ \
	17, /* /power-states/state1 */ \
	18, /* /power-states/state2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2 DT_N_S_power_states_S_state2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_PH DT_N_S_power_states_S_state2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 3
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\gpio\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 12
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_0) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_gpio_keys_S_button_2) 
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_2, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	26, /* /gpio_keys/button_0 */ \
	28, /* /gpio_keys/button_1 */ \
	29, /* /gpio_keys/button_2 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_58004000) fn(DT_N_S_soc_S_rcc_58000000) fn(DT_N_S_soc_S_interrupt_controller_58000800) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_adc_50040000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40020400) fn(DT_N_S_soc_S_dmamux_40020800) fn(DT_N_S_soc_S_usb_40006800) fn(DT_N_S_soc_S_quadspi_a0001000) fn(DT_N_S_soc_S_rng_58001000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_58000000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_58000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_dmamux_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40006800, __VA_ARGS__) fn(DT_N_S_soc_S_quadspi_a0001000, __VA_ARGS__) fn(DT_N_S_soc_S_rng_58001000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_58004000) fn(DT_N_S_soc_S_rcc_58000000) fn(DT_N_S_soc_S_interrupt_controller_58000800) fn(DT_N_S_soc_S_pin_controller_48000000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_adc_50040000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_timers_40007c00) fn(DT_N_S_soc_S_usb_40006800) fn(DT_N_S_soc_S_rng_58001000) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_58000000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_58000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40006800, __VA_ARGS__) fn(DT_N_S_soc_S_rng_58001000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	37, /* /soc/adc@50040000 */ \
	38, /* /soc/dma@40020000 */ \
	39, /* /soc/dma@40020400 */ \
	40, /* /soc/dmamux@40020800 */ \
	43, /* /soc/i2c@40005400 */ \
	46, /* /soc/i2c@40005c00 */ \
	47, /* /soc/interrupt-controller@58000800 */ \
	48, /* /soc/quadspi@a0001000 */ \
	49, /* /soc/rng@58001000 */ \
	50, /* /soc/rtc@40002800 */ \
	53, /* /soc/serial@40008000 */ \
	56, /* /soc/serial@40013800 */ \
	57, /* /soc/spi@40003800 */ \
	62, /* /soc/spi@40013000 */ \
	63, /* /soc/timer@e000e010 */ \
	64, /* /soc/timers@40007c00 */ \
	68, /* /soc/usb@40006800 */ \
	69, /* /soc/watchdog@40002c00 */ \
	70, /* /soc/watchdog@40003000 */ \
	71, /* /soc/flash-controller@58004000 */ \
	224, /* /soc/timers@40000000 */ \
	227, /* /soc/timers@40012c00 */ \
	230, /* /soc/timers@40014400 */ \
	232, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_PATH "/soc/pin-controller@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_FULL_NAME "pin-controller@48000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_CHILD_IDX 5
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13) 
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_REQUIRES_ORDS \
	21, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_SUPPORTS_ORDS \
	25, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	27, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	31, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	36, /* /soc/pin-controller@48000000/adc1_in3_pc2 */ \
	41, /* /soc/pin-controller@48000000/i2c1_scl_pb8 */ \
	42, /* /soc/pin-controller@48000000/i2c1_sda_pb9 */ \
	44, /* /soc/pin-controller@48000000/i2c3_scl_pc0 */ \
	45, /* /soc/pin-controller@48000000/i2c3_sda_pc1 */ \
	51, /* /soc/pin-controller@48000000/lpuart1_rx_pa3 */ \
	52, /* /soc/pin-controller@48000000/lpuart1_tx_pa2 */ \
	54, /* /soc/pin-controller@48000000/usart1_rx_pb7 */ \
	55, /* /soc/pin-controller@48000000/usart1_tx_pb6 */ \
	58, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	59, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	60, /* /soc/pin-controller@48000000/spi1_nss_pa4 */ \
	61, /* /soc/pin-controller@48000000/spi1_sck_pa5 */ \
	66, /* /soc/pin-controller@48000000/usb_dm_pa11 */ \
	67, /* /soc/pin-controller@48000000/usb_dp_pa12 */ \
	79, /* /soc/pin-controller@48000000/adc1_in10_pa5 */ \
	80, /* /soc/pin-controller@48000000/adc1_in11_pa6 */ \
	81, /* /soc/pin-controller@48000000/adc1_in12_pa7 */ \
	82, /* /soc/pin-controller@48000000/adc1_in13_pc4 */ \
	83, /* /soc/pin-controller@48000000/adc1_in14_pc5 */ \
	84, /* /soc/pin-controller@48000000/adc1_in15_pa8 */ \
	85, /* /soc/pin-controller@48000000/adc1_in16_pa9 */ \
	86, /* /soc/pin-controller@48000000/adc1_in1_pc0 */ \
	87, /* /soc/pin-controller@48000000/adc1_in2_pc1 */ \
	88, /* /soc/pin-controller@48000000/adc1_in4_pc3 */ \
	89, /* /soc/pin-controller@48000000/adc1_in5_pa0 */ \
	90, /* /soc/pin-controller@48000000/adc1_in6_pa1 */ \
	91, /* /soc/pin-controller@48000000/adc1_in7_pa2 */ \
	92, /* /soc/pin-controller@48000000/adc1_in8_pa3 */ \
	93, /* /soc/pin-controller@48000000/adc1_in9_pa4 */ \
	94, /* /soc/pin-controller@48000000/analog_pa0 */ \
	95, /* /soc/pin-controller@48000000/analog_pa1 */ \
	96, /* /soc/pin-controller@48000000/analog_pa10 */ \
	97, /* /soc/pin-controller@48000000/analog_pa11 */ \
	98, /* /soc/pin-controller@48000000/analog_pa12 */ \
	99, /* /soc/pin-controller@48000000/analog_pa13 */ \
	100, /* /soc/pin-controller@48000000/analog_pa14 */ \
	101, /* /soc/pin-controller@48000000/analog_pa15 */ \
	102, /* /soc/pin-controller@48000000/analog_pa2 */ \
	103, /* /soc/pin-controller@48000000/analog_pa3 */ \
	104, /* /soc/pin-controller@48000000/analog_pa4 */ \
	105, /* /soc/pin-controller@48000000/analog_pa5 */ \
	106, /* /soc/pin-controller@48000000/analog_pa6 */ \
	107, /* /soc/pin-controller@48000000/analog_pa7 */ \
	108, /* /soc/pin-controller@48000000/analog_pa8 */ \
	109, /* /soc/pin-controller@48000000/analog_pa9 */ \
	110, /* /soc/pin-controller@48000000/analog_pb0 */ \
	111, /* /soc/pin-controller@48000000/analog_pb1 */ \
	112, /* /soc/pin-controller@48000000/analog_pb10 */ \
	113, /* /soc/pin-controller@48000000/analog_pb11 */ \
	114, /* /soc/pin-controller@48000000/analog_pb12 */ \
	115, /* /soc/pin-controller@48000000/analog_pb13 */ \
	116, /* /soc/pin-controller@48000000/analog_pb14 */ \
	117, /* /soc/pin-controller@48000000/analog_pb15 */ \
	118, /* /soc/pin-controller@48000000/analog_pb2 */ \
	119, /* /soc/pin-controller@48000000/analog_pb3 */ \
	120, /* /soc/pin-controller@48000000/analog_pb4 */ \
	121, /* /soc/pin-controller@48000000/analog_pb5 */ \
	122, /* /soc/pin-controller@48000000/analog_pb6 */ \
	123, /* /soc/pin-controller@48000000/analog_pb7 */ \
	124, /* /soc/pin-controller@48000000/analog_pb8 */ \
	125, /* /soc/pin-controller@48000000/analog_pb9 */ \
	126, /* /soc/pin-controller@48000000/analog_pc0 */ \
	127, /* /soc/pin-controller@48000000/analog_pc1 */ \
	128, /* /soc/pin-controller@48000000/analog_pc10 */ \
	129, /* /soc/pin-controller@48000000/analog_pc11 */ \
	130, /* /soc/pin-controller@48000000/analog_pc12 */ \
	131, /* /soc/pin-controller@48000000/analog_pc13 */ \
	132, /* /soc/pin-controller@48000000/analog_pc14 */ \
	133, /* /soc/pin-controller@48000000/analog_pc15 */ \
	134, /* /soc/pin-controller@48000000/analog_pc2 */ \
	135, /* /soc/pin-controller@48000000/analog_pc3 */ \
	136, /* /soc/pin-controller@48000000/analog_pc4 */ \
	137, /* /soc/pin-controller@48000000/analog_pc5 */ \
	138, /* /soc/pin-controller@48000000/analog_pc6 */ \
	139, /* /soc/pin-controller@48000000/analog_pd0 */ \
	140, /* /soc/pin-controller@48000000/analog_pd1 */ \
	141, /* /soc/pin-controller@48000000/analog_pe4 */ \
	142, /* /soc/pin-controller@48000000/analog_ph3 */ \
	143, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	144, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	145, /* /soc/pin-controller@48000000/gpio@48001c00 */ \
	146, /* /soc/pin-controller@48000000/i2c1_scl_pa9 */ \
	147, /* /soc/pin-controller@48000000/i2c1_scl_pb6 */ \
	148, /* /soc/pin-controller@48000000/i2c1_sda_pa10 */ \
	149, /* /soc/pin-controller@48000000/i2c1_sda_pb7 */ \
	150, /* /soc/pin-controller@48000000/i2c3_scl_pa7 */ \
	151, /* /soc/pin-controller@48000000/i2c3_scl_pb10 */ \
	152, /* /soc/pin-controller@48000000/i2c3_scl_pb13 */ \
	153, /* /soc/pin-controller@48000000/i2c3_sda_pb11 */ \
	154, /* /soc/pin-controller@48000000/i2c3_sda_pb14 */ \
	155, /* /soc/pin-controller@48000000/i2c3_sda_pb4 */ \
	156, /* /soc/pin-controller@48000000/lpuart1_cts_pa6 */ \
	157, /* /soc/pin-controller@48000000/lpuart1_cts_pb13 */ \
	158, /* /soc/pin-controller@48000000/lpuart1_rts_pb1 */ \
	159, /* /soc/pin-controller@48000000/lpuart1_rts_pb12 */ \
	160, /* /soc/pin-controller@48000000/lpuart1_rx_pa12 */ \
	161, /* /soc/pin-controller@48000000/lpuart1_rx_pb10 */ \
	162, /* /soc/pin-controller@48000000/lpuart1_rx_pc0 */ \
	163, /* /soc/pin-controller@48000000/lpuart1_tx_pb11 */ \
	164, /* /soc/pin-controller@48000000/lpuart1_tx_pb5 */ \
	165, /* /soc/pin-controller@48000000/lpuart1_tx_pc1 */ \
	166, /* /soc/pin-controller@48000000/quadspi_bk1_io0_pb9 */ \
	167, /* /soc/pin-controller@48000000/quadspi_bk1_io1_pb8 */ \
	168, /* /soc/pin-controller@48000000/quadspi_bk1_io2_pa7 */ \
	169, /* /soc/pin-controller@48000000/quadspi_bk1_io3_pa6 */ \
	170, /* /soc/pin-controller@48000000/quadspi_bk1_ncs_pa2 */ \
	171, /* /soc/pin-controller@48000000/quadspi_bk1_ncs_pb11 */ \
	172, /* /soc/pin-controller@48000000/quadspi_clk_pa3 */ \
	173, /* /soc/pin-controller@48000000/quadspi_clk_pb10 */ \
	174, /* /soc/pin-controller@48000000/spi1_miso_pa11 */ \
	175, /* /soc/pin-controller@48000000/spi1_miso_pb4 */ \
	176, /* /soc/pin-controller@48000000/spi1_mosi_pa12 */ \
	177, /* /soc/pin-controller@48000000/spi1_mosi_pb5 */ \
	178, /* /soc/pin-controller@48000000/spi1_nss_pa15 */ \
	179, /* /soc/pin-controller@48000000/spi1_nss_pb2 */ \
	180, /* /soc/pin-controller@48000000/spi1_sck_pa1 */ \
	181, /* /soc/pin-controller@48000000/spi1_sck_pb3 */ \
	182, /* /soc/pin-controller@48000000/spi2_miso_pb14 */ \
	183, /* /soc/pin-controller@48000000/spi2_miso_pc2 */ \
	184, /* /soc/pin-controller@48000000/spi2_mosi_pb15 */ \
	185, /* /soc/pin-controller@48000000/spi2_mosi_pc1 */ \
	186, /* /soc/pin-controller@48000000/spi2_mosi_pc3 */ \
	187, /* /soc/pin-controller@48000000/spi2_nss_pb12 */ \
	188, /* /soc/pin-controller@48000000/spi2_nss_pb9 */ \
	189, /* /soc/pin-controller@48000000/spi2_nss_pd0 */ \
	190, /* /soc/pin-controller@48000000/spi2_sck_pa9 */ \
	191, /* /soc/pin-controller@48000000/spi2_sck_pb10 */ \
	192, /* /soc/pin-controller@48000000/spi2_sck_pb13 */ \
	193, /* /soc/pin-controller@48000000/spi2_sck_pd1 */ \
	194, /* /soc/pin-controller@48000000/tim16_ch1_pa6 */ \
	195, /* /soc/pin-controller@48000000/tim16_ch1_pb8 */ \
	196, /* /soc/pin-controller@48000000/tim16_ch1n_pb6 */ \
	197, /* /soc/pin-controller@48000000/tim17_ch1_pa7 */ \
	198, /* /soc/pin-controller@48000000/tim17_ch1_pb9 */ \
	199, /* /soc/pin-controller@48000000/tim17_ch1n_pb7 */ \
	200, /* /soc/pin-controller@48000000/tim1_ch1n_pa7 */ \
	201, /* /soc/pin-controller@48000000/tim1_ch1n_pb13 */ \
	202, /* /soc/pin-controller@48000000/tim1_ch2_pa9 */ \
	203, /* /soc/pin-controller@48000000/tim1_ch2n_pb14 */ \
	204, /* /soc/pin-controller@48000000/tim1_ch2n_pb8 */ \
	205, /* /soc/pin-controller@48000000/tim1_ch3_pa10 */ \
	206, /* /soc/pin-controller@48000000/tim1_ch3n_pb15 */ \
	207, /* /soc/pin-controller@48000000/tim1_ch3n_pb9 */ \
	208, /* /soc/pin-controller@48000000/tim1_ch4_pa11 */ \
	209, /* /soc/pin-controller@48000000/tim2_ch1_pa0 */ \
	210, /* /soc/pin-controller@48000000/tim2_ch1_pa5 */ \
	211, /* /soc/pin-controller@48000000/tim2_ch2_pa1 */ \
	212, /* /soc/pin-controller@48000000/tim2_ch2_pb3 */ \
	213, /* /soc/pin-controller@48000000/tim2_ch3_pa2 */ \
	214, /* /soc/pin-controller@48000000/tim2_ch3_pb10 */ \
	215, /* /soc/pin-controller@48000000/tim2_ch4_pa3 */ \
	216, /* /soc/pin-controller@48000000/tim2_ch4_pb11 */ \
	217, /* /soc/pin-controller@48000000/usart1_cts_pa11 */ \
	218, /* /soc/pin-controller@48000000/usart1_cts_pb4 */ \
	219, /* /soc/pin-controller@48000000/usart1_rts_pa12 */ \
	220, /* /soc/pin-controller@48000000/usart1_rts_pb3 */ \
	221, /* /soc/pin-controller@48000000/usart1_rx_pa10 */ \
	222, /* /soc/pin-controller@48000000/usart1_tx_pa9 */ \
	223, /* /soc/pin-controller@48000000/usb_noe_pa13 */ \
	225, /* /soc/pin-controller@48000000/tim2_ch1_pa15 */ \
	228, /* /soc/pin-controller@48000000/tim1_ch1_pa8 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_48000000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_48000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_P_reg {1207959552 /* 0x48000000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_48000000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	24, /* /soc/rcc@58000000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse  DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 32000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/rcc@58000000
 *
 * Node identifier: DT_N_S_soc_S_rcc_58000000
 *
 * Binding (compatible = st,stm32wb-rcc):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32wb-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_58000000_PATH "/soc/rcc@58000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_58000000_FULL_NAME "rcc@58000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_58000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_58000000_CHILD_IDX 3
#define DT_N_S_soc_S_rcc_58000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_58000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_58000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_58000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_58000000_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_58000000_REQUIRES_ORDS \
	21, /* /soc */ \
	23, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_58000000_SUPPORTS_ORDS \
	25, /* /soc/pin-controller@48000000/gpio@48000800 */ \
	27, /* /soc/pin-controller@48000000/gpio@48000c00 */ \
	31, /* /soc/pin-controller@48000000/gpio@48000400 */ \
	37, /* /soc/adc@50040000 */ \
	38, /* /soc/dma@40020000 */ \
	39, /* /soc/dma@40020400 */ \
	40, /* /soc/dmamux@40020800 */ \
	43, /* /soc/i2c@40005400 */ \
	46, /* /soc/i2c@40005c00 */ \
	48, /* /soc/quadspi@a0001000 */ \
	49, /* /soc/rng@58001000 */ \
	50, /* /soc/rtc@40002800 */ \
	53, /* /soc/serial@40008000 */ \
	56, /* /soc/serial@40013800 */ \
	57, /* /soc/spi@40003800 */ \
	62, /* /soc/spi@40013000 */ \
	64, /* /soc/timers@40007c00 */ \
	68, /* /soc/usb@40006800 */ \
	69, /* /soc/watchdog@40002c00 */ \
	71, /* /soc/flash-controller@58004000 */ \
	143, /* /soc/pin-controller@48000000/gpio@48000000 */ \
	144, /* /soc/pin-controller@48000000/gpio@48001000 */ \
	145, /* /soc/pin-controller@48000000/gpio@48001c00 */ \
	224, /* /soc/timers@40000000 */ \
	227, /* /soc/timers@40012c00 */ \
	230, /* /soc/timers@40014400 */ \
	232, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_58000000_EXISTS 1
#define DT_N_INST_0_st_stm32wb_rcc DT_N_S_soc_S_rcc_58000000
#define DT_N_NODELABEL_rcc         DT_N_S_soc_S_rcc_58000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_58000000_REG_NUM 1
#define DT_N_S_soc_S_rcc_58000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_REG_IDX_0_VAL_ADDRESS 1476395008 /* 0x58000000 */
#define DT_N_S_soc_S_rcc_58000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_58000000_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_58000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_58000000_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_58000000_COMPAT_MATCHES_st_stm32wb_rcc 1
#define DT_N_S_soc_S_rcc_58000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_58000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_58000000_P_cpu1_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_cpu1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu2_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_cpu2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_cpu2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_ahb4_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_ahb4_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_ahb4_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_reg {1476395008 /* 0x58000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_0 1476395008
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_58000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, reg, 0) \
	fn(DT_N_S_soc_S_rcc_58000000, reg, 1)
#define DT_N_S_soc_S_rcc_58000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_58000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rcc_58000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_58000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_clock_frequency 32000000
#define DT_N_S_soc_S_rcc_58000000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_apb1_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_apb1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_58000000_P_apb2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_58000000_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_compatible {"st,stm32wb-rcc"}
#define DT_N_S_soc_S_rcc_58000000_P_compatible_IDX_0 "st,stm32wb-rcc"
#define DT_N_S_soc_S_rcc_58000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, compatible, 0)
#define DT_N_S_soc_S_rcc_58000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_58000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_58000000_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_58000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_soc_S_rcc_58000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_58000000, clocks, 0)
#define DT_N_S_soc_S_rcc_58000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_58000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_58000000_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_58000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_58000000_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_58000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PATH "/soc/pin-controller@48000000/gpio@48000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FULL_NAME "gpio@48000800"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_CHILD_IDX 2
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_SUPPORTS_ORDS \
	26, /* /gpio_keys/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_ADDRESS 1207961600 /* 0x48000800 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg {1207961600 /* 0x48000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0 1207961600
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label "GPIOC"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_STRING_TOKEN GPIOC
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_STRING_UPPER_TOKEN GPIOC
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_0_PATH "/gpio_keys/button_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME "button_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_0_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_0_CHILD_IDX 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_0_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_0_REQUIRES_ORDS \
	20, /* /gpio_keys */ \
	25, /* /soc/pin-controller@48000000/gpio@48000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0               DT_N_S_gpio_keys_S_button_0
#define DT_N_NODELABEL_user_button_1 DT_N_S_gpio_keys_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_label "SW1"
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_TOKEN SW1
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_UPPER_TOKEN SW1
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_0, label, 2, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PATH "/soc/pin-controller@48000000/gpio@48000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FULL_NAME "gpio@48000c00"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_CHILD_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_SUPPORTS_ORDS \
	28, /* /gpio_keys/button_1 */ \
	29, /* /gpio_keys/button_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_ADDRESS 1207962624 /* 0x48000c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg {1207962624 /* 0x48000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0 1207962624
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label "GPIOD"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label_STRING_TOKEN GPIOD
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label_STRING_UPPER_TOKEN GPIOD
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_1
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_1_PATH "/gpio_keys/button_1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME "button_1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_1_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_1_CHILD_IDX 1
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_1_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_1_REQUIRES_ORDS \
	20, /* /gpio_keys */ \
	27, /* /soc/pin-controller@48000000/gpio@48000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_1_EXISTS 1
#define DT_N_ALIAS_sw1               DT_N_S_gpio_keys_S_button_1
#define DT_N_NODELABEL_user_button_2 DT_N_S_gpio_keys_S_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_1_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_label "SW2"
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_TOKEN SW2
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_UPPER_TOKEN SW2
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_2
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_2_PATH "/gpio_keys/button_2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_2_FULL_NAME "button_2"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_2_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_2_CHILD_IDX 2
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_2_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_2_REQUIRES_ORDS \
	20, /* /gpio_keys */ \
	27, /* /soc/pin-controller@48000000/gpio@48000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_2_EXISTS 1
#define DT_N_ALIAS_sw2               DT_N_S_gpio_keys_S_button_2
#define DT_N_NODELABEL_user_button_3 DT_N_S_gpio_keys_S_button_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_2_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_2_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_2_P_label "SW3"
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_TOKEN SW3
#define DT_N_S_gpio_keys_S_button_2_P_label_STRING_UPPER_TOKEN SW3
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_2, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 2)
#define DT_N_S_gpio_keys_S_button_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_2, label, 2, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\gpio\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 11
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) 
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	32, /* /leds/led_0 */ \
	33, /* /leds/led_1 */ \
	34, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PATH "/soc/pin-controller@48000000/gpio@48000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FULL_NAME "gpio@48000400"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_CHILD_IDX 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_SUPPORTS_ORDS \
	32, /* /leds/led_0 */ \
	33, /* /leds/led_1 */ \
	34, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_ADDRESS 1207960576 /* 0x48000400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg {1207960576 /* 0x48000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0 1207960576
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label "GPIOB"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_STRING_TOKEN GPIOB
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_STRING_UPPER_TOKEN GPIOB
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	30, /* /leds */ \
	31, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_NODELABEL_blue_led_1 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "User LED1"
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN User_LED1
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN USER_LED1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0) \
	fn(DT_N_S_leds_S_led_0, label, 1) \
	fn(DT_N_S_leds_S_led_0, label, 2) \
	fn(DT_N_S_leds_S_led_0, label, 3) \
	fn(DT_N_S_leds_S_led_0, label, 4) \
	fn(DT_N_S_leds_S_led_0, label, 5) \
	fn(DT_N_S_leds_S_led_0, label, 6) \
	fn(DT_N_S_leds_S_led_0, label, 7) \
	fn(DT_N_S_leds_S_led_0, label, 8)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 8, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 1
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	30, /* /leds */ \
	31, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led_2 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "User LED2"
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN User_LED2
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN USER_LED2
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3) \
	fn(DT_N_S_leds_S_led_1, label, 4) \
	fn(DT_N_S_leds_S_led_1, label, 5) \
	fn(DT_N_S_leds_S_led_1, label, 6) \
	fn(DT_N_S_leds_S_led_1, label, 7) \
	fn(DT_N_S_leds_S_led_1, label, 8)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 8, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 2
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	30, /* /leds */ \
	31, /* /soc/pin-controller@48000000/gpio@48000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_NODELABEL_green_led_3 DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "User LED3"
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN User_LED3
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN USER_LED3
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0) \
	fn(DT_N_S_leds_S_led_2, label, 1) \
	fn(DT_N_S_leds_S_led_2, label, 2) \
	fn(DT_N_S_leds_S_led_2, label, 3) \
	fn(DT_N_S_leds_S_led_2, label, 4) \
	fn(DT_N_S_leds_S_led_2, label, 5) \
	fn(DT_N_S_leds_S_led_2, label, 6) \
	fn(DT_N_S_leds_S_led_2, label, 7) \
	fn(DT_N_S_leds_S_led_2, label, 8)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 8, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	21, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	37, /* /soc/adc@50040000 */ \
	38, /* /soc/dma@40020000 */ \
	39, /* /soc/dma@40020400 */ \
	40, /* /soc/dmamux@40020800 */ \
	43, /* /soc/i2c@40005400 */ \
	46, /* /soc/i2c@40005c00 */ \
	48, /* /soc/quadspi@a0001000 */ \
	49, /* /soc/rng@58001000 */ \
	50, /* /soc/rtc@40002800 */ \
	53, /* /soc/serial@40008000 */ \
	56, /* /soc/serial@40013800 */ \
	57, /* /soc/spi@40003800 */ \
	62, /* /soc/spi@40013000 */ \
	64, /* /soc/timers@40007c00 */ \
	68, /* /soc/usb@40006800 */ \
	69, /* /soc/watchdog@40002c00 */ \
	71, /* /soc/flash-controller@58004000 */ \
	224, /* /soc/timers@40000000 */ \
	227, /* /soc/timers@40012c00 */ \
	230, /* /soc/timers@40014400 */ \
	232, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in3_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_PATH "/soc/pin-controller@48000000/adc1_in3_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FULL_NAME "adc1_in3_pc2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_CHILD_IDX 18
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_SUPPORTS_ORDS \
	37, /* /soc/adc@50040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_EXISTS 1
#define DT_N_NODELABEL_adc1_in3_pc2 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_pinmux 1104
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@50040000
 *
 * Node identifier: DT_N_S_soc_S_adc_50040000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_50040000_PATH "/soc/adc@50040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_50040000_FULL_NAME "adc@50040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_50040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_50040000_CHILD_IDX 18
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_50040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_50040000_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_50040000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	36, /* /soc/pin-controller@48000000/adc1_in3_pc2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_50040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_50040000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_50040000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_50040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_50040000_REG_NUM 1
#define DT_N_S_soc_S_adc_50040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_REG_IDX_0_VAL_ADDRESS 1342439424 /* 0x50040000 */
#define DT_N_S_soc_S_adc_50040000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_50040000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_50040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_50040000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_50040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_50040000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_50040000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_50040000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_50040000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2

/* Generic property macros: */
#define DT_N_S_soc_S_adc_50040000_P_reg {1342439424 /* 0x50040000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_0 1342439424
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_50040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, reg, 0) \
	fn(DT_N_S_soc_S_adc_50040000, reg, 1)
#define DT_N_S_soc_S_adc_50040000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_adc_50040000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, clocks, 0)
#define DT_N_S_soc_S_adc_50040000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_50040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_50040000, interrupts, 1)
#define DT_N_S_soc_S_adc_50040000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_adc1_in3_pc2
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_50040000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_has_temp_channel 1
#define DT_N_S_soc_S_adc_50040000_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_has_vref_channel 1
#define DT_N_S_soc_S_adc_50040000_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_label "ADC_1"
#define DT_N_S_soc_S_adc_50040000_P_label_STRING_TOKEN ADC_1
#define DT_N_S_soc_S_adc_50040000_P_label_STRING_UPPER_TOKEN ADC_1
#define DT_N_S_soc_S_adc_50040000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, label, 0) \
	fn(DT_N_S_soc_S_adc_50040000, label, 1) \
	fn(DT_N_S_soc_S_adc_50040000, label, 2) \
	fn(DT_N_S_soc_S_adc_50040000, label, 3) \
	fn(DT_N_S_soc_S_adc_50040000, label, 4)
#define DT_N_S_soc_S_adc_50040000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_status "okay"
#define DT_N_S_soc_S_adc_50040000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_50040000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_50040000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_50040000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_50040000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_50040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, status, 0) \
	fn(DT_N_S_soc_S_adc_50040000, status, 1) \
	fn(DT_N_S_soc_S_adc_50040000, status, 2) \
	fn(DT_N_S_soc_S_adc_50040000, status, 3)
#define DT_N_S_soc_S_adc_50040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_50040000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_50040000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_50040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_50040000, compatible, 0)
#define DT_N_S_soc_S_adc_50040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_50040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_50040000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_50040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_50040000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_50040000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32-dma-v2):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32-dma-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020000_PATH "/soc/dma@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020000_FULL_NAME "dma@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020000_CHILD_IDX 21
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v2 DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 7
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32_dma_v2 1
#define DT_N_S_soc_S_dma_40020000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, reg, 0) \
	fn(DT_N_S_soc_S_dma_40020000, reg, 1)
#define DT_N_S_soc_S_dma_40020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 13)
#define DT_N_S_soc_S_dma_40020000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, interrupts, 13, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_offset 0
#define DT_N_S_soc_S_dma_40020000_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_label "DMA_1"
#define DT_N_S_soc_S_dma_40020000_P_label_STRING_TOKEN DMA_1
#define DT_N_S_soc_S_dma_40020000_P_label_STRING_UPPER_TOKEN DMA_1
#define DT_N_S_soc_S_dma_40020000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, label, 0) \
	fn(DT_N_S_soc_S_dma_40020000, label, 1) \
	fn(DT_N_S_soc_S_dma_40020000, label, 2) \
	fn(DT_N_S_soc_S_dma_40020000, label, 3) \
	fn(DT_N_S_soc_S_dma_40020000, label, 4)
#define DT_N_S_soc_S_dma_40020000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_requests 7
#define DT_N_S_soc_S_dma_40020000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "disabled"
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, status, 0) \
	fn(DT_N_S_soc_S_dma_40020000, status, 1) \
	fn(DT_N_S_soc_S_dma_40020000, status, 2) \
	fn(DT_N_S_soc_S_dma_40020000, status, 3) \
	fn(DT_N_S_soc_S_dma_40020000, status, 4) \
	fn(DT_N_S_soc_S_dma_40020000, status, 5) \
	fn(DT_N_S_soc_S_dma_40020000, status, 6) \
	fn(DT_N_S_soc_S_dma_40020000, status, 7)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32-dma-v2"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020400
 *
 * Node identifier: DT_N_S_soc_S_dma_40020400
 *
 * Binding (compatible = st,stm32-dma-v2):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32-dma-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020400_PATH "/soc/dma@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020400_FULL_NAME "dma@40020400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020400_CHILD_IDX 22
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020400_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020400_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v2 DT_N_S_soc_S_dma_40020400
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020400_REG_NUM 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_dma_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020400_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020400_IRQ_NUM 7
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq 56
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq 57
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq 58
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq 59
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_irq 60
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_irq 61
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_COMPAT_MATCHES_st_stm32_dma_v2 1
#define DT_N_S_soc_S_dma_40020400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, reg, 0) \
	fn(DT_N_S_soc_S_dma_40020400, reg, 1)
#define DT_N_S_soc_S_dma_40020400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */, 56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 61 /* 0x3d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2 56
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4 57
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6 58
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8 59
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_10 60
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_12 61
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 13)
#define DT_N_S_soc_S_dma_40020400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, interrupts, 13, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_dma_offset 7
#define DT_N_S_soc_S_dma_40020400_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_label "DMA_2"
#define DT_N_S_soc_S_dma_40020400_P_label_STRING_TOKEN DMA_2
#define DT_N_S_soc_S_dma_40020400_P_label_STRING_UPPER_TOKEN DMA_2
#define DT_N_S_soc_S_dma_40020400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, label, 0) \
	fn(DT_N_S_soc_S_dma_40020400, label, 1) \
	fn(DT_N_S_soc_S_dma_40020400, label, 2) \
	fn(DT_N_S_soc_S_dma_40020400, label, 3) \
	fn(DT_N_S_soc_S_dma_40020400, label, 4)
#define DT_N_S_soc_S_dma_40020400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_dma_requests 7
#define DT_N_S_soc_S_dma_40020400_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_status "disabled"
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40020400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40020400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, status, 0) \
	fn(DT_N_S_soc_S_dma_40020400, status, 1) \
	fn(DT_N_S_soc_S_dma_40020400, status, 2) \
	fn(DT_N_S_soc_S_dma_40020400, status, 3) \
	fn(DT_N_S_soc_S_dma_40020400, status, 4) \
	fn(DT_N_S_soc_S_dma_40020400, status, 5) \
	fn(DT_N_S_soc_S_dma_40020400, status, 6) \
	fn(DT_N_S_soc_S_dma_40020400, status, 7)
#define DT_N_S_soc_S_dma_40020400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40020400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible {"st,stm32-dma-v2"}
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0 "st,stm32-dma-v2"
#define DT_N_S_soc_S_dma_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, compatible, 0)
#define DT_N_S_soc_S_dma_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_dma_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020400, clocks, 0)
#define DT_N_S_soc_S_dma_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dmamux@40020800
 *
 * Node identifier: DT_N_S_soc_S_dmamux_40020800
 *
 * Binding (compatible = st,stm32-dmamux):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32-dmamux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dmamux_40020800_PATH "/soc/dmamux@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dmamux_40020800_FULL_NAME "dmamux@40020800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dmamux_40020800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dmamux_40020800_CHILD_IDX 23
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dmamux_40020800_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dmamux_40020800_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dmamux_40020800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dmamux_40020800_EXISTS 1
#define DT_N_INST_0_st_stm32_dmamux DT_N_S_soc_S_dmamux_40020800
#define DT_N_NODELABEL_dmamux1      DT_N_S_soc_S_dmamux_40020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dmamux_40020800_REG_NUM 1
#define DT_N_S_soc_S_dmamux_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_dmamux_40020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dmamux_40020800_RANGES_NUM 0
#define DT_N_S_soc_S_dmamux_40020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dmamux_40020800_IRQ_NUM 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_irq 62
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dmamux_40020800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_COMPAT_MATCHES_st_stm32_dmamux 1
#define DT_N_S_soc_S_dmamux_40020800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dmamux_40020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dmamux_40020800_P_reg {1073874944 /* 0x40020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dmamux_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, reg, 0) \
	fn(DT_N_S_soc_S_dmamux_40020800, reg, 1)
#define DT_N_S_soc_S_dmamux_40020800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts {62 /* 0x3e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_0 62
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, interrupts, 0) \
	fn(DT_N_S_soc_S_dmamux_40020800, interrupts, 1)
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_label "DMAMUX_1"
#define DT_N_S_soc_S_dmamux_40020800_P_label_STRING_TOKEN DMAMUX_1
#define DT_N_S_soc_S_dmamux_40020800_P_label_STRING_UPPER_TOKEN DMAMUX_1
#define DT_N_S_soc_S_dmamux_40020800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, label, 0) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 1) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 2) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 3) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 4) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 5) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 6) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 7)
#define DT_N_S_soc_S_dmamux_40020800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_label_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_dma_channels 14
#define DT_N_S_soc_S_dmamux_40020800_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_dma_generators 4
#define DT_N_S_soc_S_dmamux_40020800_P_dma_generators_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_dma_requests 36
#define DT_N_S_soc_S_dmamux_40020800_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_status "disabled"
#define DT_N_S_soc_S_dmamux_40020800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dmamux_40020800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dmamux_40020800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dmamux_40020800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, status, 0) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 1) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 2) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 3) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 4) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 5) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 6) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 7)
#define DT_N_S_soc_S_dmamux_40020800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dmamux_40020800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_status_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_compatible {"st,stm32-dmamux"}
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0 "st,stm32-dmamux"
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, compatible, 0)
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_dmamux_40020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dmamux_40020800, clocks, 0)
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dmamux_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_LEN 1
#define DT_N_S_soc_S_dmamux_40020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dmamux_40020800_P_wakeup_source 0
#define DT_N_S_soc_S_dmamux_40020800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@48000000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_CHILD_IDX 73
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_SUPPORTS_ORDS \
	43, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_pinmux 772
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@48000000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_CHILD_IDX 80
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	43, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_pinmux 804
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 8
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	41, /* /soc/pin-controller@48000000/i2c1_scl_pb8 */ \
	42, /* /soc/pin-controller@48000000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_arduino_i2c  DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */, 31 /* 0x1f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40005400_P_label_STRING_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40005400_P_label_STRING_UPPER_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4)
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PATH "/soc/pin-controller@48000000/i2c3_scl_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FULL_NAME "i2c3_scl_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_CHILD_IDX 77
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_SUPPORTS_ORDS \
	46, /* /soc/i2c@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pc0 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_pinmux 1028
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PATH "/soc/pin-controller@48000000/i2c3_sda_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FULL_NAME "i2c3_sda_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_CHILD_IDX 84
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_SUPPORTS_ORDS \
	46, /* /soc/i2c@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pc1 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_pinmux 1060
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005c00_CHILD_IDX 9
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	44, /* /soc/pin-controller@48000000/i2c3_scl_pc0 */ \
	45, /* /soc/pin-controller@48000000/i2c3_sda_pc1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {32 /* 0x20 */, 0 /* 0x0 */, 33 /* 0x21 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 33
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pc0
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pc1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_label "I2C_3"
#define DT_N_S_soc_S_i2c_40005c00_P_label_STRING_TOKEN I2C_3
#define DT_N_S_soc_S_i2c_40005c00_P_label_STRING_UPPER_TOKEN I2C_3
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4)
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "okay"
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@58000800
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_58000800
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_58000800_PATH "/soc/interrupt-controller@58000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_58000800_FULL_NAME "interrupt-controller@58000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_58000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_58000800_CHILD_IDX 4
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_58000800_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_58000800_REQUIRES_ORDS \
	21, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_58000800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_58000800_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_58000800
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_58000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_IDX_0_VAL_ADDRESS 1476397056 /* 0x58000800 */
#define DT_N_S_soc_S_interrupt_controller_58000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_58000800_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_58000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_58000800_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_58000800_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_58000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_58000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg {1476397056 /* 0x58000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_0 1476397056
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_58000800, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_58000800, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_58000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_58000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_58000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_58000800, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_58000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_58000800_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_58000800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/quadspi@a0001000
 *
 * Node identifier: DT_N_S_soc_S_quadspi_a0001000
 *
 * Binding (compatible = st,stm32-qspi):
 *   $ZEPHYR_BASE\dts\bindings\qspi\st,stm32-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_quadspi_a0001000_PATH "/soc/quadspi@a0001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_quadspi_a0001000_FULL_NAME "quadspi@a0001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_quadspi_a0001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_quadspi_a0001000_CHILD_IDX 25
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_quadspi_a0001000_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_quadspi_a0001000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_quadspi_a0001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_quadspi_a0001000_EXISTS 1
#define DT_N_INST_0_st_stm32_qspi DT_N_S_soc_S_quadspi_a0001000
#define DT_N_NODELABEL_quadspi    DT_N_S_soc_S_quadspi_a0001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_quadspi_a0001000_REG_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_REG_IDX_0_VAL_ADDRESS 2684358656 /* 0xa0001000 */
#define DT_N_S_soc_S_quadspi_a0001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_quadspi_a0001000_RANGES_NUM 0
#define DT_N_S_soc_S_quadspi_a0001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_NUM 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_quadspi_a0001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_COMPAT_MATCHES_st_stm32_qspi 1
#define DT_N_S_soc_S_quadspi_a0001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_quadspi_a0001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_quadspi_a0001000_P_reg {2684358656 /* 0xa0001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_0 2684358656
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, reg, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, reg, 1)
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 1)
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_status "disabled"
#define DT_N_S_soc_S_quadspi_a0001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_quadspi_a0001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_quadspi_a0001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_quadspi_a0001000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_quadspi_a0001000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_quadspi_a0001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, status, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 3) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 4) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 5) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 6) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 7)
#define DT_N_S_soc_S_quadspi_a0001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_status_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible {"st,stm32-qspi"}
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_IDX_0 "st,stm32-qspi"
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, compatible, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_label "QUADSPI"
#define DT_N_S_soc_S_quadspi_a0001000_P_label_STRING_TOKEN QUADSPI
#define DT_N_S_soc_S_quadspi_a0001000_P_label_STRING_UPPER_TOKEN QUADSPI
#define DT_N_S_soc_S_quadspi_a0001000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, label, 0) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 1) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 2) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 3) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 4) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 5) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 6)
#define DT_N_S_soc_S_quadspi_a0001000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_quadspi_a0001000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_label_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bus 6
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_quadspi_a0001000, clocks, 0)
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_quadspi_a0001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_LEN 1
#define DT_N_S_soc_S_quadspi_a0001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_quadspi_a0001000_P_wakeup_source 0
#define DT_N_S_soc_S_quadspi_a0001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rng@58001000
 *
 * Node identifier: DT_N_S_soc_S_rng_58001000
 *
 * Binding (compatible = st,stm32-rng):
 *   $ZEPHYR_BASE\dts\bindings\rng\st,stm32-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rng_58001000_PATH "/soc/rng@58001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rng_58001000_FULL_NAME "rng@58001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rng_58001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rng_58001000_CHILD_IDX 26
#define DT_N_S_soc_S_rng_58001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rng_58001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_58001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rng_58001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rng_58001000_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rng_58001000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rng_58001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rng_58001000_EXISTS 1
#define DT_N_INST_0_st_stm32_rng DT_N_S_soc_S_rng_58001000
#define DT_N_NODELABEL_rng       DT_N_S_soc_S_rng_58001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rng_58001000_REG_NUM 1
#define DT_N_S_soc_S_rng_58001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_REG_IDX_0_VAL_ADDRESS 1476399104 /* 0x58001000 */
#define DT_N_S_soc_S_rng_58001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rng_58001000_RANGES_NUM 0
#define DT_N_S_soc_S_rng_58001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rng_58001000_IRQ_NUM 1
#define DT_N_S_soc_S_rng_58001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_rng_58001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rng_58001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_COMPAT_MATCHES_st_stm32_rng 1
#define DT_N_S_soc_S_rng_58001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rng_58001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rng_58001000_P_reg {1476399104 /* 0x58001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rng_58001000_P_reg_IDX_0 1476399104
#define DT_N_S_soc_S_rng_58001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rng_58001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_58001000, reg, 0) \
	fn(DT_N_S_soc_S_rng_58001000, reg, 1)
#define DT_N_S_soc_S_rng_58001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_58001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_58001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_label "RNG"
#define DT_N_S_soc_S_rng_58001000_P_label_STRING_TOKEN RNG
#define DT_N_S_soc_S_rng_58001000_P_label_STRING_UPPER_TOKEN RNG
#define DT_N_S_soc_S_rng_58001000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_58001000, label, 0) \
	fn(DT_N_S_soc_S_rng_58001000, label, 1) \
	fn(DT_N_S_soc_S_rng_58001000, label, 2)
#define DT_N_S_soc_S_rng_58001000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_58001000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_rng_58001000_P_label_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_rng_58001000_P_clocks_IDX_0_VAL_bus 6
#define DT_N_S_soc_S_rng_58001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_rng_58001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_58001000, clocks, 0)
#define DT_N_S_soc_S_rng_58001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_58001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_58001000_P_clocks_LEN 1
#define DT_N_S_soc_S_rng_58001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_status "okay"
#define DT_N_S_soc_S_rng_58001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rng_58001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_58001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rng_58001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rng_58001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_58001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_58001000, status, 0) \
	fn(DT_N_S_soc_S_rng_58001000, status, 1) \
	fn(DT_N_S_soc_S_rng_58001000, status, 2) \
	fn(DT_N_S_soc_S_rng_58001000, status, 3)
#define DT_N_S_soc_S_rng_58001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_58001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rng_58001000_P_status_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_compatible {"st,stm32-rng"}
#define DT_N_S_soc_S_rng_58001000_P_compatible_IDX_0 "st,stm32-rng"
#define DT_N_S_soc_S_rng_58001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_58001000, compatible, 0)
#define DT_N_S_soc_S_rng_58001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_58001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_58001000_P_compatible_LEN 1
#define DT_N_S_soc_S_rng_58001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rng_58001000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_rng_58001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rng_58001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_58001000, interrupts, 0) \
	fn(DT_N_S_soc_S_rng_58001000, interrupts, 1)
#define DT_N_S_soc_S_rng_58001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_58001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_58001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_58001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rng_58001000_P_wakeup_source 0
#define DT_N_S_soc_S_rng_58001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE\dts\bindings\rtc\st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_CHILD_IDX 10
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40002800_P_label_STRING_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_40002800_P_label_STRING_UPPER_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, label, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4)
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_PATH "/soc/pin-controller@48000000/lpuart1_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FULL_NAME "lpuart1_rx_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_CHILD_IDX 150
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_SUPPORTS_ORDS \
	53, /* /soc/serial@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pa3 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_pinmux 104
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_PATH "/soc/pin-controller@48000000/lpuart1_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FULL_NAME "lpuart1_tx_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_CHILD_IDX 156
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_SUPPORTS_ORDS \
	53, /* /soc/serial@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pa2 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_pinmux 72
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40008000
 *
 * Node identifier: DT_N_S_soc_S_serial_40008000
 *
 * Binding (compatible = st,stm32-lpuart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40008000_PATH "/soc/serial@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40008000_FULL_NAME "serial@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40008000_CHILD_IDX 13
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40008000_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40008000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	51, /* /soc/pin-controller@48000000/lpuart1_rx_pa3 */ \
	52, /* /soc/pin-controller@48000000/lpuart1_tx_pa2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40008000_EXISTS 1
#define DT_N_INST_0_st_stm32_lpuart   DT_N_S_soc_S_serial_40008000
#define DT_N_INST_1_st_stm32_uart     DT_N_S_soc_S_serial_40008000
#define DT_N_NODELABEL_lpuart1        DT_N_S_soc_S_serial_40008000
#define DT_N_NODELABEL_arduino_serial DT_N_S_soc_S_serial_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40008000_REG_NUM 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_lpuart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40008000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40008000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1)
#define DT_N_S_soc_S_serial_40008000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus 4
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pa2
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa3
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40008000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40008000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_label "LPUART_1"
#define DT_N_S_soc_S_serial_40008000_P_label_STRING_TOKEN LPUART_1
#define DT_N_S_soc_S_serial_40008000_P_label_STRING_UPPER_TOKEN LPUART_1
#define DT_N_S_soc_S_serial_40008000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, label, 0) \
	fn(DT_N_S_soc_S_serial_40008000, label, 1) \
	fn(DT_N_S_soc_S_serial_40008000, label, 2) \
	fn(DT_N_S_soc_S_serial_40008000, label, 3) \
	fn(DT_N_S_soc_S_serial_40008000, label, 4) \
	fn(DT_N_S_soc_S_serial_40008000, label, 5) \
	fn(DT_N_S_soc_S_serial_40008000, label, 6) \
	fn(DT_N_S_soc_S_serial_40008000, label, 7)
#define DT_N_S_soc_S_serial_40008000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status "okay"
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, status, 0) \
	fn(DT_N_S_soc_S_serial_40008000, status, 1) \
	fn(DT_N_S_soc_S_serial_40008000, status, 2) \
	fn(DT_N_S_soc_S_serial_40008000, status, 3)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible {"st,stm32-lpuart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0 "st,stm32-lpuart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40008000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PATH "/soc/pin-controller@48000000/usart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FULL_NAME "usart1_rx_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_CHILD_IDX 153
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_SUPPORTS_ORDS \
	56, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb7 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_pinmux 743
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PATH "/soc/pin-controller@48000000/usart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FULL_NAME "usart1_tx_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_CHILD_IDX 159
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_SUPPORTS_ORDS \
	56, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pb6 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_pinmux 711
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40013800_PATH "/soc/serial@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40013800_FULL_NAME "serial@40013800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40013800_CHILD_IDX 7
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40013800_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40013800_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	54, /* /soc/pin-controller@48000000/usart1_rx_pb7 */ \
	55, /* /soc/pin-controller@48000000/usart1_tx_pb6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40013800
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, reg, 0) \
	fn(DT_N_S_soc_S_serial_40013800, reg, 1)
#define DT_N_S_soc_S_serial_40013800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40013800, interrupts, 1)
#define DT_N_S_soc_S_serial_40013800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_single_wire 0
#define DT_N_S_soc_S_serial_40013800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40013800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_label "UART_1"
#define DT_N_S_soc_S_serial_40013800_P_label_STRING_TOKEN UART_1
#define DT_N_S_soc_S_serial_40013800_P_label_STRING_UPPER_TOKEN UART_1
#define DT_N_S_soc_S_serial_40013800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, label, 0) \
	fn(DT_N_S_soc_S_serial_40013800, label, 1) \
	fn(DT_N_S_soc_S_serial_40013800, label, 2) \
	fn(DT_N_S_soc_S_serial_40013800, label, 3) \
	fn(DT_N_S_soc_S_serial_40013800, label, 4) \
	fn(DT_N_S_soc_S_serial_40013800, label, 5)
#define DT_N_S_soc_S_serial_40013800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "okay"
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, status, 0) \
	fn(DT_N_S_soc_S_serial_40013800, status, 1) \
	fn(DT_N_S_soc_S_serial_40013800, status, 2) \
	fn(DT_N_S_soc_S_serial_40013800, status, 3)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 12
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40003800_P_label_STRING_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40003800_P_label_STRING_UPPER_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, label, 0) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4)
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PATH "/soc/pin-controller@48000000/spi1_miso_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FULL_NAME "spi1_miso_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_CHILD_IDX 93
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_SUPPORTS_ORDS \
	62, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa6 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux 197
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PATH "/soc/pin-controller@48000000/spi1_mosi_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FULL_NAME "spi1_mosi_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_CHILD_IDX 98
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_SUPPORTS_ORDS \
	62, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa7 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux 229
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PATH "/soc/pin-controller@48000000/spi1_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FULL_NAME "spi1_nss_pa4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_CHILD_IDX 104
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_SUPPORTS_ORDS \
	62, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa4 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_pinmux 133
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PATH "/soc/pin-controller@48000000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_CHILD_IDX 111
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_SUPPORTS_ORDS \
	62, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux 165
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi-fifo):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32-spi-fifo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 11
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	58, /* /soc/pin-controller@48000000/spi1_miso_pa6 */ \
	59, /* /soc/pin-controller@48000000/spi1_mosi_pa7 */ \
	60, /* /soc/pin-controller@48000000/spi1_nss_pa4 */ \
	61, /* /soc/pin-controller@48000000/spi1_sck_pa5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_arduino_spi    DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {34 /* 0x22 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa6
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa7
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40013000_P_label_STRING_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40013000_P_label_STRING_UPPER_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, label, 0) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4)
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	21, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/timers@40007c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40007c00
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40007c00_PATH "/soc/timers@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40007c00_FULL_NAME "timers@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40007c00_CHILD_IDX 20
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40007c00_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40007c00_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40007c00_EXISTS 1
#define DT_N_INST_0_st_stm32_lptim DT_N_S_soc_S_timers_40007c00
#define DT_N_NODELABEL_lptim1      DT_N_S_soc_S_timers_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40007c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_timers_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_40007c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40007c00_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_40007c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40007c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40007c00_P_label "LPTIM_1"
#define DT_N_S_soc_S_timers_40007c00_P_label_STRING_TOKEN LPTIM_1
#define DT_N_S_soc_S_timers_40007c00_P_label_STRING_UPPER_TOKEN LPTIM_1
#define DT_N_S_soc_S_timers_40007c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 6)
#define DT_N_S_soc_S_timers_40007c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1)
#define DT_N_S_soc_S_timers_40007c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits 2147483648
#define DT_N_S_soc_S_timers_40007c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts {47 /* 0x2f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_status "okay"
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40007c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40007c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3)
#define DT_N_S_soc_S_timers_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40007c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40007c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40007c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /usbphy
 *
 * Node identifier: DT_N_S_usbphy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE\dts\bindings\phy\usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_usbphy_PATH "/usbphy"

/* Node's name with unit-address: */
#define DT_N_S_usbphy_FULL_NAME "usbphy"

/* Node parent (/) identifier: */
#define DT_N_S_usbphy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_usbphy_CHILD_IDX 8
#define DT_N_S_usbphy_FOREACH_CHILD(fn) 
#define DT_N_S_usbphy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_usbphy_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_usbphy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_usbphy_SUPPORTS_ORDS \
	68, /* /soc/usb@40006800 */

/* Existence and alternate IDs: */
#define DT_N_S_usbphy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_usbphy
#define DT_N_NODELABEL_usb_fs_phy DT_N_S_usbphy

/* Macros for properties that are special in the specification: */
#define DT_N_S_usbphy_REG_NUM 0
#define DT_N_S_usbphy_RANGES_NUM 0
#define DT_N_S_usbphy_FOREACH_RANGE(fn) 
#define DT_N_S_usbphy_IRQ_NUM 0
#define DT_N_S_usbphy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_usbphy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_usbphy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_usbphy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_usbphy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_usbphy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_usbphy, compatible, 0)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_usbphy, compatible, 0, __VA_ARGS__)
#define DT_N_S_usbphy_P_compatible_LEN 1
#define DT_N_S_usbphy_P_compatible_EXISTS 1
#define DT_N_S_usbphy_P_label "USB_FS_PHY"
#define DT_N_S_usbphy_P_label_STRING_TOKEN USB_FS_PHY
#define DT_N_S_usbphy_P_label_STRING_UPPER_TOKEN USB_FS_PHY
#define DT_N_S_usbphy_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_usbphy, label, 0) \
	fn(DT_N_S_usbphy, label, 1) \
	fn(DT_N_S_usbphy, label, 2) \
	fn(DT_N_S_usbphy, label, 3) \
	fn(DT_N_S_usbphy, label, 4) \
	fn(DT_N_S_usbphy, label, 5) \
	fn(DT_N_S_usbphy, label, 6) \
	fn(DT_N_S_usbphy, label, 7) \
	fn(DT_N_S_usbphy, label, 8) \
	fn(DT_N_S_usbphy, label, 9)
#define DT_N_S_usbphy_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_usbphy, label, 0, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 1, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 2, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 3, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 4, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 5, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 6, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 7, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 8, __VA_ARGS__) \
	fn(DT_N_S_usbphy, label, 9, __VA_ARGS__)
#define DT_N_S_usbphy_P_label_EXISTS 1
#define DT_N_S_usbphy_P_wakeup_source 0
#define DT_N_S_usbphy_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_PATH "/soc/pin-controller@48000000/usb_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FULL_NAME "usb_dm_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_CHILD_IDX 162
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_SUPPORTS_ORDS \
	68, /* /soc/usb@40006800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_dm_pa11 DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_pinmux 362
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_PATH "/soc/pin-controller@48000000/usb_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FULL_NAME "usb_dp_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_CHILD_IDX 163
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_SUPPORTS_ORDS \
	68, /* /soc/usb@40006800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_dp_pa12 DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_pinmux 394
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/usb@40006800
 *
 * Node identifier: DT_N_S_soc_S_usb_40006800
 *
 * Binding (compatible = st,stm32-usb):
 *   $ZEPHYR_BASE\dts\bindings\usb\st,stm32-usb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_40006800_PATH "/soc/usb@40006800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_40006800_FULL_NAME "usb@40006800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_40006800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_40006800_CHILD_IDX 24
#define DT_N_S_soc_S_usb_40006800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_40006800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_40006800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_40006800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_40006800_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_40006800_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */ \
	65, /* /usbphy */ \
	66, /* /soc/pin-controller@48000000/usb_dm_pa11 */ \
	67, /* /soc/pin-controller@48000000/usb_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_40006800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_40006800_EXISTS 1
#define DT_N_INST_0_st_stm32_usb   DT_N_S_soc_S_usb_40006800
#define DT_N_NODELABEL_usb         DT_N_S_soc_S_usb_40006800
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_40006800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_40006800_REG_NUM 1
#define DT_N_S_soc_S_usb_40006800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_REG_IDX_0_VAL_ADDRESS 1073768448 /* 0x40006800 */
#define DT_N_S_soc_S_usb_40006800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usb_40006800_RANGES_NUM 0
#define DT_N_S_soc_S_usb_40006800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_40006800_IRQ_NUM 2
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_VAL_irq 19
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usb_VAL_irq DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usb_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usb_VAL_priority DT_N_S_soc_S_usb_40006800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usb_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usbhp_VAL_irq DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usbhp_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usbhp_VAL_priority DT_N_S_soc_S_usb_40006800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_usb_40006800_IRQ_NAME_usbhp_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_COMPAT_MATCHES_st_stm32_usb 1
#define DT_N_S_soc_S_usb_40006800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_40006800_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_40006800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usb_40006800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_40006800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usb_40006800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40006800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_usb_40006800_P_reg {1073768448 /* 0x40006800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usb_40006800_P_reg_IDX_0 1073768448
#define DT_N_S_soc_S_usb_40006800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usb_40006800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, reg, 0) \
	fn(DT_N_S_soc_S_usb_40006800, reg, 1)
#define DT_N_S_soc_S_usb_40006800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */, 19 /* 0x13 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_2 19
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_usb_40006800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_40006800, interrupts, 1) \
	fn(DT_N_S_soc_S_usb_40006800, interrupts, 2) \
	fn(DT_N_S_soc_S_usb_40006800, interrupts, 3)
#define DT_N_S_soc_S_usb_40006800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_ram_size 1024
#define DT_N_S_soc_S_usb_40006800_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_phys DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40006800_P_phys_IDX_0 DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40006800_P_phys_IDX_0_PH DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40006800_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_phys_LEN 1
#define DT_N_S_soc_S_usb_40006800_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_enable_pin_remap 0
#define DT_N_S_soc_S_usb_40006800_P_enable_pin_remap_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_usb_40006800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_usb_40006800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_clocks_IDX_0_VAL_bits 67108864
#define DT_N_S_soc_S_usb_40006800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, clocks, 0)
#define DT_N_S_soc_S_usb_40006800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_40006800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usb_40006800_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_label "USB"
#define DT_N_S_soc_S_usb_40006800_P_label_STRING_TOKEN USB
#define DT_N_S_soc_S_usb_40006800_P_label_STRING_UPPER_TOKEN USB
#define DT_N_S_soc_S_usb_40006800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, label, 0) \
	fn(DT_N_S_soc_S_usb_40006800, label, 1) \
	fn(DT_N_S_soc_S_usb_40006800, label, 2)
#define DT_N_S_soc_S_usb_40006800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_status "okay"
#define DT_N_S_soc_S_usb_40006800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_40006800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_40006800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40006800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usb_40006800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_40006800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, status, 0) \
	fn(DT_N_S_soc_S_usb_40006800, status, 1) \
	fn(DT_N_S_soc_S_usb_40006800, status, 2) \
	fn(DT_N_S_soc_S_usb_40006800, status, 3)
#define DT_N_S_soc_S_usb_40006800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_compatible {"st,stm32-usb"}
#define DT_N_S_soc_S_usb_40006800_P_compatible_IDX_0 "st,stm32-usb"
#define DT_N_S_soc_S_usb_40006800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, compatible, 0)
#define DT_N_S_soc_S_usb_40006800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_40006800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names {"usb", "usbhp"}
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_IDX_0 "usb"
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_IDX_1 "usbhp"
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_usb_40006800, interrupt_names, 1)
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_usb_40006800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_wakeup_source 0
#define DT_N_S_soc_S_usb_40006800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_48000000_S_usb_dp_pa12
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_40006800, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40006800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40006800, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40006800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usb_40006800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 6
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_label "WWDG"
#define DT_N_S_soc_S_watchdog_40002c00_P_label_STRING_TOKEN WWDG
#define DT_N_S_soc_S_watchdog_40002c00_P_label_STRING_UPPER_TOKEN WWDG
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 19
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	21, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_label "IWDG"
#define DT_N_S_soc_S_watchdog_40003000_P_label_STRING_TOKEN IWDG
#define DT_N_S_soc_S_watchdog_40003000_P_label_STRING_UPPER_TOKEN IWDG
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_PATH "/soc/flash-controller@58004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_FULL_NAME "flash-controller@58004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_CHILD_IDX 2
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000) 
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_SUPPORTS_ORDS \
	72, /* /soc/flash-controller@58004000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_58004000
#define DT_N_INST_0_st_stm32wb_flash_controller DT_N_S_soc_S_flash_controller_58004000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_58004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_REG_IDX_0_VAL_ADDRESS 1476411392 /* 0x58004000 */
#define DT_N_S_soc_S_flash_controller_58004000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_58004000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_58004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_58004000_COMPAT_MATCHES_st_stm32wb_flash_controller 1
#define DT_N_S_soc_S_flash_controller_58004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_58004000_P_label_STRING_TOKEN FLASH_CTRL
#define DT_N_S_soc_S_flash_controller_58004000_P_label_STRING_UPPER_TOKEN FLASH_CTRL
#define DT_N_S_soc_S_flash_controller_58004000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 9)
#define DT_N_S_soc_S_flash_controller_58004000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_reg {1476411392 /* 0x58004000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_0 1476411392
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible {"st,stm32-flash-controller", "st,stm32wb-flash-controller"}
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_1 "st,stm32wb-flash-controller"
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_58004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, interrupts, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_IDX_0_VAL_bus 6
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000, clocks, 0)
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_LEN 1
#define DT_N_S_soc_S_flash_controller_58004000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_58004000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_PATH "/soc/flash-controller@58004000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@58004000) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_58004000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_CHILD_IDX 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REQUIRES_ORDS \
	71, /* /soc/flash-controller@58004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_SUPPORTS_ORDS \
	73, /* /soc/flash-controller@58004000/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_REG_IDX_0_VAL_SIZE 827392 /* 0xca000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_max_erase_time 25
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label "FLASH_STM32"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_STRING_TOKEN FLASH_STM32
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_STRING_UPPER_TOKEN FLASH_STM32
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 10)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, label, 10, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_write_block_size 8
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 827392 /* 0xca000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_1 827392
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@58004000/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@58004000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_CHILD_IDX 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	72, /* /soc/flash-controller@58004000/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	74, /* /soc/flash-controller@58004000/flash@8000000/partitions/partition@0 */ \
	75, /* /soc/flash-controller@58004000/flash@8000000/partitions/partition@c000 */ \
	76, /* /soc/flash-controller@58004000/flash@8000000/partitions/partition@66000 */ \
	77, /* /soc/flash-controller@58004000/flash@8000000/partitions/partition@c0000 */ \
	78, /* /soc/flash-controller@58004000/flash@8000000/partitions/partition@c4000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@58004000/flash@8000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@58004000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_CHILD_IDX 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	73, /* /soc/flash-controller@58004000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000/partitions/partition@c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_PATH "/soc/flash-controller@58004000/flash@8000000/partitions/partition@c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_FULL_NAME "partition@c000"

/* Node parent (/soc/flash-controller@58004000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_PARENT DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_CHILD_IDX 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_REQUIRES_ORDS \
	73, /* /soc/flash-controller@58004000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_ADDRESS 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_SIZE 368640 /* 0x5a000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 6)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg {49152 /* 0xc000 */, 368640 /* 0x5a000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_0 49152
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_1 368640
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000/partitions/partition@66000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_PATH "/soc/flash-controller@58004000/flash@8000000/partitions/partition@66000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_FULL_NAME "partition@66000"

/* Node parent (/soc/flash-controller@58004000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_PARENT DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_CHILD_IDX 2
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_REQUIRES_ORDS \
	73, /* /soc/flash-controller@58004000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_REG_IDX_0_VAL_ADDRESS 417792 /* 0x66000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_REG_IDX_0_VAL_SIZE 368640 /* 0x5a000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 6)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg {417792 /* 0x66000 */, 368640 /* 0x5a000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_IDX_0 417792
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_IDX_1 368640
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000/partitions/partition@c0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_PATH "/soc/flash-controller@58004000/flash@8000000/partitions/partition@c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_FULL_NAME "partition@c0000"

/* Node parent (/soc/flash-controller@58004000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_PARENT DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_CHILD_IDX 3
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_REQUIRES_ORDS \
	73, /* /soc/flash-controller@58004000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_REG_IDX_0_VAL_ADDRESS 786432 /* 0xc0000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 10) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 11) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 12)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg {786432 /* 0xc0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_0 786432
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@58004000/flash@8000000/partitions/partition@c4000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_PATH "/soc/flash-controller@58004000/flash@8000000/partitions/partition@c4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_FULL_NAME "partition@c4000"

/* Node parent (/soc/flash-controller@58004000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_PARENT DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_CHILD_IDX 4
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_REQUIRES_ORDS \
	73, /* /soc/flash-controller@58004000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_REG_IDX_0_VAL_ADDRESS 802816 /* 0xc4000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 6)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg {802816 /* 0xc4000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_IDX_0 802816
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, reg, 1)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in10_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_PATH "/soc/pin-controller@48000000/adc1_in10_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_FULL_NAME "adc1_in10_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_CHILD_IDX 11
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_EXISTS 1
#define DT_N_NODELABEL_adc1_in10_pa5 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_pinmux 176
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in10_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in11_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_PATH "/soc/pin-controller@48000000/adc1_in11_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_FULL_NAME "adc1_in11_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_CHILD_IDX 12
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_EXISTS 1
#define DT_N_NODELABEL_adc1_in11_pa6 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_pinmux 208
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in11_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in12_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_PATH "/soc/pin-controller@48000000/adc1_in12_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_FULL_NAME "adc1_in12_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_CHILD_IDX 13
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_EXISTS 1
#define DT_N_NODELABEL_adc1_in12_pa7 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_pinmux 240
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in12_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in13_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_PATH "/soc/pin-controller@48000000/adc1_in13_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FULL_NAME "adc1_in13_pc4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_CHILD_IDX 20
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_EXISTS 1
#define DT_N_NODELABEL_adc1_in13_pc4 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_pinmux 1168
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in13_pc4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in14_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_PATH "/soc/pin-controller@48000000/adc1_in14_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FULL_NAME "adc1_in14_pc5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_CHILD_IDX 21
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_EXISTS 1
#define DT_N_NODELABEL_adc1_in14_pc5 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_pinmux 1200
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in14_pc5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in15_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_PATH "/soc/pin-controller@48000000/adc1_in15_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_FULL_NAME "adc1_in15_pa8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_CHILD_IDX 14
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_EXISTS 1
#define DT_N_NODELABEL_adc1_in15_pa8 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_pinmux 272
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in15_pa8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in16_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_PATH "/soc/pin-controller@48000000/adc1_in16_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_FULL_NAME "adc1_in16_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_CHILD_IDX 15
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_EXISTS 1
#define DT_N_NODELABEL_adc1_in16_pa9 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_pinmux 304
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in16_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in1_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_PATH "/soc/pin-controller@48000000/adc1_in1_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_FULL_NAME "adc1_in1_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_CHILD_IDX 16
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_EXISTS 1
#define DT_N_NODELABEL_adc1_in1_pc0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_pinmux 1040
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in1_pc0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in2_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_PATH "/soc/pin-controller@48000000/adc1_in2_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_FULL_NAME "adc1_in2_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_CHILD_IDX 17
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_EXISTS 1
#define DT_N_NODELABEL_adc1_in2_pc1 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_pinmux 1072
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in2_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in4_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_PATH "/soc/pin-controller@48000000/adc1_in4_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FULL_NAME "adc1_in4_pc3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_CHILD_IDX 19
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_EXISTS 1
#define DT_N_NODELABEL_adc1_in4_pc3 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_pinmux 1136
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in4_pc3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in5_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_PATH "/soc/pin-controller@48000000/adc1_in5_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FULL_NAME "adc1_in5_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_CHILD_IDX 6
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_EXISTS 1
#define DT_N_NODELABEL_adc1_in5_pa0 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in5_pa0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in6_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_PATH "/soc/pin-controller@48000000/adc1_in6_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_FULL_NAME "adc1_in6_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_CHILD_IDX 7
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_EXISTS 1
#define DT_N_NODELABEL_adc1_in6_pa1 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_pinmux 48
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in6_pa1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in7_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_PATH "/soc/pin-controller@48000000/adc1_in7_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_FULL_NAME "adc1_in7_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_CHILD_IDX 8
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_EXISTS 1
#define DT_N_NODELABEL_adc1_in7_pa2 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_pinmux 80
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in7_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in8_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_PATH "/soc/pin-controller@48000000/adc1_in8_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_FULL_NAME "adc1_in8_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_CHILD_IDX 9
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_EXISTS 1
#define DT_N_NODELABEL_adc1_in8_pa3 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_pinmux 112
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in8_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/adc1_in9_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_PATH "/soc/pin-controller@48000000/adc1_in9_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_FULL_NAME "adc1_in9_pa4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_CHILD_IDX 10
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_EXISTS 1
#define DT_N_NODELABEL_adc1_in9_pa4 DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_pinmux 144
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_adc1_in9_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_PATH "/soc/pin-controller@48000000/analog_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_FULL_NAME "analog_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_CHILD_IDX 22
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_EXISTS 1
#define DT_N_NODELABEL_analog_pa0 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_PATH "/soc/pin-controller@48000000/analog_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_FULL_NAME "analog_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_CHILD_IDX 23
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_EXISTS 1
#define DT_N_NODELABEL_analog_pa1 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_pinmux 48
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_PATH "/soc/pin-controller@48000000/analog_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_FULL_NAME "analog_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_CHILD_IDX 32
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_EXISTS 1
#define DT_N_NODELABEL_analog_pa10 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_pinmux 336
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_PATH "/soc/pin-controller@48000000/analog_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_FULL_NAME "analog_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_CHILD_IDX 33
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_EXISTS 1
#define DT_N_NODELABEL_analog_pa11 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_pinmux 368
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_PATH "/soc/pin-controller@48000000/analog_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_FULL_NAME "analog_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_CHILD_IDX 34
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_EXISTS 1
#define DT_N_NODELABEL_analog_pa12 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_pinmux 400
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_PATH "/soc/pin-controller@48000000/analog_pa13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_FULL_NAME "analog_pa13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_CHILD_IDX 35
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_EXISTS 1
#define DT_N_NODELABEL_analog_pa13 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_pinmux 432
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_PATH "/soc/pin-controller@48000000/analog_pa14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_FULL_NAME "analog_pa14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_CHILD_IDX 36
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_EXISTS 1
#define DT_N_NODELABEL_analog_pa14 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_pinmux 464
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_PATH "/soc/pin-controller@48000000/analog_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_FULL_NAME "analog_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_CHILD_IDX 37
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_EXISTS 1
#define DT_N_NODELABEL_analog_pa15 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_pinmux 496
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_PATH "/soc/pin-controller@48000000/analog_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_FULL_NAME "analog_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_CHILD_IDX 24
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_EXISTS 1
#define DT_N_NODELABEL_analog_pa2 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_pinmux 80
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_PATH "/soc/pin-controller@48000000/analog_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_FULL_NAME "analog_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_CHILD_IDX 25
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_EXISTS 1
#define DT_N_NODELABEL_analog_pa3 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_pinmux 112
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_PATH "/soc/pin-controller@48000000/analog_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_FULL_NAME "analog_pa4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_CHILD_IDX 26
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_EXISTS 1
#define DT_N_NODELABEL_analog_pa4 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_pinmux 144
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_PATH "/soc/pin-controller@48000000/analog_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_FULL_NAME "analog_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_CHILD_IDX 27
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_EXISTS 1
#define DT_N_NODELABEL_analog_pa5 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_pinmux 176
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_PATH "/soc/pin-controller@48000000/analog_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_FULL_NAME "analog_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_CHILD_IDX 28
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_EXISTS 1
#define DT_N_NODELABEL_analog_pa6 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_pinmux 208
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_PATH "/soc/pin-controller@48000000/analog_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_FULL_NAME "analog_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_CHILD_IDX 29
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_EXISTS 1
#define DT_N_NODELABEL_analog_pa7 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_pinmux 240
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_PATH "/soc/pin-controller@48000000/analog_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_FULL_NAME "analog_pa8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_CHILD_IDX 30
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_EXISTS 1
#define DT_N_NODELABEL_analog_pa8 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_pinmux 272
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_PATH "/soc/pin-controller@48000000/analog_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_FULL_NAME "analog_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_CHILD_IDX 31
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_EXISTS 1
#define DT_N_NODELABEL_analog_pa9 DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_pinmux 304
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_PATH "/soc/pin-controller@48000000/analog_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_FULL_NAME "analog_pb0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_CHILD_IDX 38
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_EXISTS 1
#define DT_N_NODELABEL_analog_pb0 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_pinmux 528
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_PATH "/soc/pin-controller@48000000/analog_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_FULL_NAME "analog_pb1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_CHILD_IDX 39
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_EXISTS 1
#define DT_N_NODELABEL_analog_pb1 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_pinmux 560
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_PATH "/soc/pin-controller@48000000/analog_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_FULL_NAME "analog_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_CHILD_IDX 48
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_EXISTS 1
#define DT_N_NODELABEL_analog_pb10 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_pinmux 848
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_PATH "/soc/pin-controller@48000000/analog_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_FULL_NAME "analog_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_CHILD_IDX 49
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_EXISTS 1
#define DT_N_NODELABEL_analog_pb11 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_pinmux 880
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_PATH "/soc/pin-controller@48000000/analog_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_FULL_NAME "analog_pb12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_CHILD_IDX 50
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_EXISTS 1
#define DT_N_NODELABEL_analog_pb12 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_pinmux 912
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_PATH "/soc/pin-controller@48000000/analog_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_FULL_NAME "analog_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_CHILD_IDX 51
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_EXISTS 1
#define DT_N_NODELABEL_analog_pb13 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_pinmux 944
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_PATH "/soc/pin-controller@48000000/analog_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_FULL_NAME "analog_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_CHILD_IDX 52
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_EXISTS 1
#define DT_N_NODELABEL_analog_pb14 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_pinmux 976
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_PATH "/soc/pin-controller@48000000/analog_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_FULL_NAME "analog_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_CHILD_IDX 53
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_EXISTS 1
#define DT_N_NODELABEL_analog_pb15 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_pinmux 1008
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_PATH "/soc/pin-controller@48000000/analog_pb2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_FULL_NAME "analog_pb2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_CHILD_IDX 40
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_EXISTS 1
#define DT_N_NODELABEL_analog_pb2 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_pinmux 592
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_PATH "/soc/pin-controller@48000000/analog_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_FULL_NAME "analog_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_CHILD_IDX 41
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_EXISTS 1
#define DT_N_NODELABEL_analog_pb3 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_pinmux 624
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_PATH "/soc/pin-controller@48000000/analog_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_FULL_NAME "analog_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_CHILD_IDX 42
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_EXISTS 1
#define DT_N_NODELABEL_analog_pb4 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_pinmux 656
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_PATH "/soc/pin-controller@48000000/analog_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_FULL_NAME "analog_pb5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_CHILD_IDX 43
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_EXISTS 1
#define DT_N_NODELABEL_analog_pb5 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_pinmux 688
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_PATH "/soc/pin-controller@48000000/analog_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_FULL_NAME "analog_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_CHILD_IDX 44
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_EXISTS 1
#define DT_N_NODELABEL_analog_pb6 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_pinmux 720
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_PATH "/soc/pin-controller@48000000/analog_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_FULL_NAME "analog_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_CHILD_IDX 45
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_EXISTS 1
#define DT_N_NODELABEL_analog_pb7 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_pinmux 752
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_PATH "/soc/pin-controller@48000000/analog_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_FULL_NAME "analog_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_CHILD_IDX 46
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_EXISTS 1
#define DT_N_NODELABEL_analog_pb8 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_PATH "/soc/pin-controller@48000000/analog_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_FULL_NAME "analog_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_CHILD_IDX 47
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_EXISTS 1
#define DT_N_NODELABEL_analog_pb9 DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_pinmux 816
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_PATH "/soc/pin-controller@48000000/analog_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_FULL_NAME "analog_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_CHILD_IDX 54
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_EXISTS 1
#define DT_N_NODELABEL_analog_pc0 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_pinmux 1040
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_PATH "/soc/pin-controller@48000000/analog_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_FULL_NAME "analog_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_CHILD_IDX 55
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_EXISTS 1
#define DT_N_NODELABEL_analog_pc1 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_pinmux 1072
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_PATH "/soc/pin-controller@48000000/analog_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_FULL_NAME "analog_pc10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_CHILD_IDX 61
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_EXISTS 1
#define DT_N_NODELABEL_analog_pc10 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_pinmux 1360
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_PATH "/soc/pin-controller@48000000/analog_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_FULL_NAME "analog_pc11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_CHILD_IDX 62
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_EXISTS 1
#define DT_N_NODELABEL_analog_pc11 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_pinmux 1392
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_PATH "/soc/pin-controller@48000000/analog_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_FULL_NAME "analog_pc12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_CHILD_IDX 63
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_EXISTS 1
#define DT_N_NODELABEL_analog_pc12 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_pinmux 1424
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_PATH "/soc/pin-controller@48000000/analog_pc13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_FULL_NAME "analog_pc13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_CHILD_IDX 64
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_EXISTS 1
#define DT_N_NODELABEL_analog_pc13 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_pinmux 1456
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_PATH "/soc/pin-controller@48000000/analog_pc14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_FULL_NAME "analog_pc14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_CHILD_IDX 65
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_EXISTS 1
#define DT_N_NODELABEL_analog_pc14 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_pinmux 1488
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_PATH "/soc/pin-controller@48000000/analog_pc15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_FULL_NAME "analog_pc15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_CHILD_IDX 66
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_EXISTS 1
#define DT_N_NODELABEL_analog_pc15 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_pinmux 1520
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_PATH "/soc/pin-controller@48000000/analog_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_FULL_NAME "analog_pc2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_CHILD_IDX 56
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_EXISTS 1
#define DT_N_NODELABEL_analog_pc2 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_pinmux 1104
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_PATH "/soc/pin-controller@48000000/analog_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_FULL_NAME "analog_pc3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_CHILD_IDX 57
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_EXISTS 1
#define DT_N_NODELABEL_analog_pc3 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_pinmux 1136
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_PATH "/soc/pin-controller@48000000/analog_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_FULL_NAME "analog_pc4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_CHILD_IDX 58
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_EXISTS 1
#define DT_N_NODELABEL_analog_pc4 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_pinmux 1168
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_PATH "/soc/pin-controller@48000000/analog_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_FULL_NAME "analog_pc5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_CHILD_IDX 59
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_EXISTS 1
#define DT_N_NODELABEL_analog_pc5 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_pinmux 1200
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_PATH "/soc/pin-controller@48000000/analog_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_FULL_NAME "analog_pc6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_CHILD_IDX 60
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_EXISTS 1
#define DT_N_NODELABEL_analog_pc6 DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_pinmux 1232
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pc6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pd0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_PATH "/soc/pin-controller@48000000/analog_pd0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_FULL_NAME "analog_pd0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_CHILD_IDX 67
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_EXISTS 1
#define DT_N_NODELABEL_analog_pd0 DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_pinmux 1552
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pd1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_PATH "/soc/pin-controller@48000000/analog_pd1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_FULL_NAME "analog_pd1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_CHILD_IDX 68
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_EXISTS 1
#define DT_N_NODELABEL_analog_pd1 DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_pinmux 1584
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pd1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_pe4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_PATH "/soc/pin-controller@48000000/analog_pe4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_FULL_NAME "analog_pe4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_CHILD_IDX 69
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_EXISTS 1
#define DT_N_NODELABEL_analog_pe4 DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_pinmux 2192
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_pe4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/analog_ph3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_PATH "/soc/pin-controller@48000000/analog_ph3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_FULL_NAME "analog_ph3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_CHILD_IDX 70
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_EXISTS 1
#define DT_N_NODELABEL_analog_ph3 DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_pinmux 3696
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_analog_ph3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48000000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PATH "/soc/pin-controller@48000000/gpio@48000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FULL_NAME "gpio@48000000"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_CHILD_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_ADDRESS 1207959552 /* 0x48000000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg {1207959552 /* 0x48000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0 1207959552
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label "GPIOA"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_STRING_TOKEN GPIOA
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_STRING_UPPER_TOKEN GPIOA
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PATH "/soc/pin-controller@48000000/gpio@48001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FULL_NAME "gpio@48001000"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_CHILD_IDX 4
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_ADDRESS 1207963648 /* 0x48001000 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg {1207963648 /* 0x48001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0 1207963648
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label "GPIOE"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label_STRING_TOKEN GPIOE
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label_STRING_UPPER_TOKEN GPIOE
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/gpio@48001c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PATH "/soc/pin-controller@48000000/gpio@48001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FULL_NAME "gpio@48001c00"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_CHILD_IDX 5
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */ \
	24, /* /soc/rcc@58000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_VAL_ADDRESS 1207966720 /* 0x48001c00 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg {1207966720 /* 0x48001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_0 1207966720
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label "GPIOH"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_STRING_TOKEN GPIOH
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_STRING_UPPER_TOKEN GPIOH
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 4)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_PATH "/soc/pin-controller@48000000/i2c1_scl_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FULL_NAME "i2c1_scl_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_CHILD_IDX 71
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_ORD 146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pa9 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_pinmux 292
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_scl_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PATH "/soc/pin-controller@48000000/i2c1_scl_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FULL_NAME "i2c1_scl_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_CHILD_IDX 72
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_ORD 147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb6 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_pinmux 708
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_scl_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_PATH "/soc/pin-controller@48000000/i2c1_sda_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FULL_NAME "i2c1_sda_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_CHILD_IDX 78
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_ORD 148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pa10 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_pinmux 324
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c1_sda_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PATH "/soc/pin-controller@48000000/i2c1_sda_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FULL_NAME "i2c1_sda_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_CHILD_IDX 79
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_ORD 149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb7 DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_pinmux 740
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c1_sda_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_PATH "/soc/pin-controller@48000000/i2c3_scl_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FULL_NAME "i2c3_scl_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_CHILD_IDX 74
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_ORD 150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pa7 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_pinmux 228
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_PATH "/soc/pin-controller@48000000/i2c3_scl_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FULL_NAME "i2c3_scl_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_CHILD_IDX 75
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_ORD 151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pb10 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_pinmux 836
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_scl_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_PATH "/soc/pin-controller@48000000/i2c3_scl_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FULL_NAME "i2c3_scl_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_CHILD_IDX 76
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_ORD 152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pb13 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_pinmux 932
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_scl_pb13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_PATH "/soc/pin-controller@48000000/i2c3_sda_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FULL_NAME "i2c3_sda_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_CHILD_IDX 82
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_ORD 153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb11 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_pinmux 868
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_PATH "/soc/pin-controller@48000000/i2c3_sda_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FULL_NAME "i2c3_sda_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_CHILD_IDX 83
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_ORD 154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb14 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_pinmux 964
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/i2c3_sda_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_PATH "/soc/pin-controller@48000000/i2c3_sda_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FULL_NAME "i2c3_sda_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_CHILD_IDX 81
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_ORD 155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb4 DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_pinmux 644
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_i2c3_sda_pb4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_cts_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_PATH "/soc/pin-controller@48000000/lpuart1_cts_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FULL_NAME "lpuart1_cts_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_CHILD_IDX 142
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_ORD 156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_EXISTS 1
#define DT_N_NODELABEL_lpuart1_cts_pa6 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_pinmux 200
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_cts_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_PATH "/soc/pin-controller@48000000/lpuart1_cts_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FULL_NAME "lpuart1_cts_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_CHILD_IDX 145
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_ORD 157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_EXISTS 1
#define DT_N_NODELABEL_lpuart1_cts_pb13 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_pinmux 936
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_cts_pb13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rts_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_PATH "/soc/pin-controller@48000000/lpuart1_rts_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FULL_NAME "lpuart1_rts_pb1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_CHILD_IDX 147
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_ORD 158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rts_pb1 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_pinmux 552
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rts_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_PATH "/soc/pin-controller@48000000/lpuart1_rts_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FULL_NAME "lpuart1_rts_pb12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_CHILD_IDX 149
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_ORD 159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rts_pb12 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_pinmux 904
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rts_pb12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_PATH "/soc/pin-controller@48000000/lpuart1_rx_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_FULL_NAME "lpuart1_rx_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_CHILD_IDX 152
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_ORD 160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pa12 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_pinmux 392
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_PATH "/soc/pin-controller@48000000/lpuart1_rx_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FULL_NAME "lpuart1_rx_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_CHILD_IDX 154
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_ORD 161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pb10 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_pinmux 840
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_rx_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_PATH "/soc/pin-controller@48000000/lpuart1_rx_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FULL_NAME "lpuart1_rx_pc0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_CHILD_IDX 155
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_ORD 162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pc0 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_pinmux 1032
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_rx_pc0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_PATH "/soc/pin-controller@48000000/lpuart1_tx_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FULL_NAME "lpuart1_tx_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_CHILD_IDX 160
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_ORD 163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pb11 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_pinmux 872
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_PATH "/soc/pin-controller@48000000/lpuart1_tx_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_FULL_NAME "lpuart1_tx_pb5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_CHILD_IDX 158
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_ORD 164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pb5 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_pinmux 680
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pb5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/lpuart1_tx_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_PATH "/soc/pin-controller@48000000/lpuart1_tx_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FULL_NAME "lpuart1_tx_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_CHILD_IDX 161
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_ORD 165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pc1 DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_pinmux 1064
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_lpuart1_tx_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io0_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_PATH "/soc/pin-controller@48000000/quadspi_bk1_io0_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_FULL_NAME "quadspi_bk1_io0_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_CHILD_IDX 90
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_ORD 166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io0_pb9 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_pinmux 810
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io0_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io1_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_PATH "/soc/pin-controller@48000000/quadspi_bk1_io1_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_FULL_NAME "quadspi_bk1_io1_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_CHILD_IDX 89
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_ORD 167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io1_pb8 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_pinmux 778
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io1_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io2_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_PATH "/soc/pin-controller@48000000/quadspi_bk1_io2_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_FULL_NAME "quadspi_bk1_io2_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_CHILD_IDX 88
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_ORD 168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io2_pa7 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_pinmux 234
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io2_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_io3_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_PATH "/soc/pin-controller@48000000/quadspi_bk1_io3_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_FULL_NAME "quadspi_bk1_io3_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_CHILD_IDX 87
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_ORD 169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_io3_pa6 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_pinmux 202
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_io3_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_ncs_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_PATH "/soc/pin-controller@48000000/quadspi_bk1_ncs_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_FULL_NAME "quadspi_bk1_ncs_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_CHILD_IDX 85
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_ORD 170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_ncs_pa2 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_pinmux 74
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_bk1_ncs_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_PATH "/soc/pin-controller@48000000/quadspi_bk1_ncs_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_FULL_NAME "quadspi_bk1_ncs_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_CHILD_IDX 92
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_ORD 171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_EXISTS 1
#define DT_N_NODELABEL_quadspi_bk1_ncs_pb11 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_pinmux 874
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_bk1_ncs_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_clk_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_PATH "/soc/pin-controller@48000000/quadspi_clk_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_FULL_NAME "quadspi_clk_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_CHILD_IDX 86
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_ORD 172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_EXISTS 1
#define DT_N_NODELABEL_quadspi_clk_pa3 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_pinmux 106
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/quadspi_clk_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_PATH "/soc/pin-controller@48000000/quadspi_clk_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_FULL_NAME "quadspi_clk_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_CHILD_IDX 91
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_ORD 173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_EXISTS 1
#define DT_N_NODELABEL_quadspi_clk_pb10 DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_pinmux 842
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_quadspi_clk_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_PATH "/soc/pin-controller@48000000/spi1_miso_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FULL_NAME "spi1_miso_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_CHILD_IDX 94
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_ORD 174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa11 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_pinmux 357
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_PATH "/soc/pin-controller@48000000/spi1_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FULL_NAME "spi1_miso_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_CHILD_IDX 95
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_ORD 175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pb4 DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_pinmux 645
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_miso_pb4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_PATH "/soc/pin-controller@48000000/spi1_mosi_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FULL_NAME "spi1_mosi_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_CHILD_IDX 99
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_ORD 176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa12 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_pinmux 389
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_PATH "/soc/pin-controller@48000000/spi1_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FULL_NAME "spi1_mosi_pb5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_CHILD_IDX 100
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_ORD 177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pb5 DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_pinmux 677
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_mosi_pb5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_PATH "/soc/pin-controller@48000000/spi1_nss_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FULL_NAME "spi1_nss_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_CHILD_IDX 105
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_ORD 178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa15 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_pinmux 485
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pa15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_nss_pb2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_PATH "/soc/pin-controller@48000000/spi1_nss_pb2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FULL_NAME "spi1_nss_pb2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_CHILD_IDX 106
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_ORD 179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pb2 DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_pinmux 581
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_nss_pb2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_PATH "/soc/pin-controller@48000000/spi1_sck_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FULL_NAME "spi1_sck_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_CHILD_IDX 110
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_ORD 180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa1 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_pinmux 37
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pa1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi1_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_PATH "/soc/pin-controller@48000000/spi1_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FULL_NAME "spi1_sck_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_CHILD_IDX 112
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_ORD 181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pb3 DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_pinmux 613
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi1_sck_pb3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_miso_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PATH "/soc/pin-controller@48000000/spi2_miso_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FULL_NAME "spi2_miso_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_CHILD_IDX 96
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_ORD 182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pb14 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_pinmux 965
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pb14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_miso_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_PATH "/soc/pin-controller@48000000/spi2_miso_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FULL_NAME "spi2_miso_pc2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_CHILD_IDX 97
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_ORD 183

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pc2 DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_pinmux 1093
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_miso_pc2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PATH "/soc/pin-controller@48000000/spi2_mosi_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FULL_NAME "spi2_mosi_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_CHILD_IDX 101
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_ORD 184

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pb15 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_pinmux 997
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pb15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_PATH "/soc/pin-controller@48000000/spi2_mosi_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FULL_NAME "spi2_mosi_pc1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_CHILD_IDX 102
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_ORD 185

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pc1 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_pinmux 1059
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_mosi_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_PATH "/soc/pin-controller@48000000/spi2_mosi_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FULL_NAME "spi2_mosi_pc3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_CHILD_IDX 103
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_ORD 186

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pc3 DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_pinmux 1125
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_mosi_pc3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PATH "/soc/pin-controller@48000000/spi2_nss_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FULL_NAME "spi2_nss_pb12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_CHILD_IDX 108
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_ORD 187

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb12 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_pinmux 901
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_PATH "/soc/pin-controller@48000000/spi2_nss_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FULL_NAME "spi2_nss_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_CHILD_IDX 107
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_ORD 188

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb9 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_pinmux 805
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_nss_pd0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_PATH "/soc/pin-controller@48000000/spi2_nss_pd0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_FULL_NAME "spi2_nss_pd0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_CHILD_IDX 109
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_ORD 189

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pd0 DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_pinmux 1541
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_nss_pd0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_PATH "/soc/pin-controller@48000000/spi2_sck_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FULL_NAME "spi2_sck_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_CHILD_IDX 113
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_ORD 190

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pa9 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_pinmux 293
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_PATH "/soc/pin-controller@48000000/spi2_sck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FULL_NAME "spi2_sck_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_CHILD_IDX 114
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_ORD 191

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb10 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_pinmux 837
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PATH "/soc/pin-controller@48000000/spi2_sck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FULL_NAME "spi2_sck_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_CHILD_IDX 115
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_ORD 192

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb13 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_pinmux 933
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pb13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/spi2_sck_pd1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_PATH "/soc/pin-controller@48000000/spi2_sck_pd1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_FULL_NAME "spi2_sck_pd1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_CHILD_IDX 116
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_ORD 193

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pd1 DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_pinmux 1573
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_spi2_sck_pd1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim16_ch1_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_PATH "/soc/pin-controller@48000000/tim16_ch1_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FULL_NAME "tim16_ch1_pa6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_CHILD_IDX 136
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_ORD 194

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_EXISTS 1
#define DT_N_NODELABEL_tim16_ch1_pa6 DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_pinmux 206
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim16_ch1_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_PATH "/soc/pin-controller@48000000/tim16_ch1_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FULL_NAME "tim16_ch1_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_CHILD_IDX 138
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_ORD 195

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_EXISTS 1
#define DT_N_NODELABEL_tim16_ch1_pb8 DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_pinmux 782
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim16_ch1n_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_PATH "/soc/pin-controller@48000000/tim16_ch1n_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FULL_NAME "tim16_ch1n_pb6"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_CHILD_IDX 137
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_ORD 196

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_EXISTS 1
#define DT_N_NODELABEL_tim16_ch1n_pb6 DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_pinmux 718
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim16_ch1n_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim17_ch1_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_PATH "/soc/pin-controller@48000000/tim17_ch1_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FULL_NAME "tim17_ch1_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_CHILD_IDX 139
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_ORD 197

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_EXISTS 1
#define DT_N_NODELABEL_tim17_ch1_pa7 DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_pinmux 238
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim17_ch1_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_PATH "/soc/pin-controller@48000000/tim17_ch1_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FULL_NAME "tim17_ch1_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_CHILD_IDX 141
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_ORD 198

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_EXISTS 1
#define DT_N_NODELABEL_tim17_ch1_pb9 DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_pinmux 814
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim17_ch1n_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_PATH "/soc/pin-controller@48000000/tim17_ch1n_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FULL_NAME "tim17_ch1n_pb7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_CHILD_IDX 140
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_ORD 199

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_EXISTS 1
#define DT_N_NODELABEL_tim17_ch1n_pb7 DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_pinmux 750
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim17_ch1n_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1n_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_PATH "/soc/pin-controller@48000000/tim1_ch1n_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FULL_NAME "tim1_ch1n_pa7"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_CHILD_IDX 117
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_ORD 200

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pa7 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_pinmux 225
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1n_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_PATH "/soc/pin-controller@48000000/tim1_ch1n_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FULL_NAME "tim1_ch1n_pb13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_CHILD_IDX 124
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_ORD 201

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pb13 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_pinmux 929
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1n_pb13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch2_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_PATH "/soc/pin-controller@48000000/tim1_ch2_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FULL_NAME "tim1_ch2_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_CHILD_IDX 119
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_ORD 202

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2_pa9 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_pinmux 289
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch2n_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_PATH "/soc/pin-controller@48000000/tim1_ch2n_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FULL_NAME "tim1_ch2n_pb14"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_CHILD_IDX 125
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_ORD 203

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb14 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_pinmux 961
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch2n_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_PATH "/soc/pin-controller@48000000/tim1_ch2n_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FULL_NAME "tim1_ch2n_pb8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_CHILD_IDX 122
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_ORD 204

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb8 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_pinmux 769
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch2n_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch3_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_PATH "/soc/pin-controller@48000000/tim1_ch3_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FULL_NAME "tim1_ch3_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_CHILD_IDX 120
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_ORD 205

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3_pa10 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_pinmux 321
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch3n_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_PATH "/soc/pin-controller@48000000/tim1_ch3n_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FULL_NAME "tim1_ch3n_pb15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_CHILD_IDX 126
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_ORD 206

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb15 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_pinmux 993
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch3n_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_PATH "/soc/pin-controller@48000000/tim1_ch3n_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FULL_NAME "tim1_ch3n_pb9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_CHILD_IDX 123
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_ORD 207

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb9 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_pinmux 801
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch3n_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch4_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_PATH "/soc/pin-controller@48000000/tim1_ch4_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FULL_NAME "tim1_ch4_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_CHILD_IDX 121
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_ORD 208

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_EXISTS 1
#define DT_N_NODELABEL_tim1_ch4_pa11 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_pinmux 353
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch4_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_PATH "/soc/pin-controller@48000000/tim2_ch1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FULL_NAME "tim2_ch1_pa0"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_CHILD_IDX 127
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_ORD 209

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa0 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_pinmux 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_PATH "/soc/pin-controller@48000000/tim2_ch1_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FULL_NAME "tim2_ch1_pa5"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_CHILD_IDX 131
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_ORD 210

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa5 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_pinmux 161
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch2_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_PATH "/soc/pin-controller@48000000/tim2_ch2_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FULL_NAME "tim2_ch2_pa1"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_CHILD_IDX 128
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_ORD 211

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pa1 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_pinmux 33
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pa1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch2_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_PATH "/soc/pin-controller@48000000/tim2_ch2_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FULL_NAME "tim2_ch2_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_CHILD_IDX 133
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_ORD 212

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pb3 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_pinmux 609
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch2_pb3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch3_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_PATH "/soc/pin-controller@48000000/tim2_ch3_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FULL_NAME "tim2_ch3_pa2"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_CHILD_IDX 129
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_ORD 213

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pa2 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_pinmux 65
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch3_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_PATH "/soc/pin-controller@48000000/tim2_ch3_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FULL_NAME "tim2_ch3_pb10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_CHILD_IDX 134
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_ORD 214

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pb10 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_pinmux 833
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch3_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch4_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_PATH "/soc/pin-controller@48000000/tim2_ch4_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FULL_NAME "tim2_ch4_pa3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_CHILD_IDX 130
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_ORD 215

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pa3 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_pinmux 97
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch4_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_PATH "/soc/pin-controller@48000000/tim2_ch4_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FULL_NAME "tim2_ch4_pb11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_CHILD_IDX 135
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_ORD 216

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pb11 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_pinmux 865
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch4_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_cts_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_PATH "/soc/pin-controller@48000000/usart1_cts_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FULL_NAME "usart1_cts_pa11"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_CHILD_IDX 143
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_ORD 217

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_EXISTS 1
#define DT_N_NODELABEL_usart1_cts_pa11 DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_pinmux 359
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_cts_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_PATH "/soc/pin-controller@48000000/usart1_cts_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FULL_NAME "usart1_cts_pb4"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_CHILD_IDX 144
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_ORD 218

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_EXISTS 1
#define DT_N_NODELABEL_usart1_cts_pb4 DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_pinmux 647
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_cts_pb4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rts_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_PATH "/soc/pin-controller@48000000/usart1_rts_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FULL_NAME "usart1_rts_pa12"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_CHILD_IDX 146
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_ORD 219

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_EXISTS 1
#define DT_N_NODELABEL_usart1_rts_pa12 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_pinmux 391
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rts_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_PATH "/soc/pin-controller@48000000/usart1_rts_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FULL_NAME "usart1_rts_pb3"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_CHILD_IDX 148
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_ORD 220

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_EXISTS 1
#define DT_N_NODELABEL_usart1_rts_pb3 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_pinmux 615
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rts_pb3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_rx_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_PATH "/soc/pin-controller@48000000/usart1_rx_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FULL_NAME "usart1_rx_pa10"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_CHILD_IDX 151
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_ORD 221

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pa10 DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_pinmux 327
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_rx_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usart1_tx_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_PATH "/soc/pin-controller@48000000/usart1_tx_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FULL_NAME "usart1_tx_pa9"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_CHILD_IDX 157
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_ORD 222

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa9 DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_pinmux 295
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usart1_tx_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/usb_noe_pa13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_PATH "/soc/pin-controller@48000000/usb_noe_pa13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_FULL_NAME "usb_noe_pa13"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_CHILD_IDX 164
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_ORD 223

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_EXISTS 1
#define DT_N_NODELABEL_usb_noe_pa13 DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_pinmux 426
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_usb_noe_pa13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 15
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 224

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	226, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_label "TIMERS_2"
#define DT_N_S_soc_S_timers_40000000_P_label_STRING_TOKEN TIMERS_2
#define DT_N_S_soc_S_timers_40000000_P_label_STRING_UPPER_TOKEN TIMERS_2
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7)
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1)
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "okay"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim2_ch1_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PATH "/soc/pin-controller@48000000/tim2_ch1_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FULL_NAME "tim2_ch1_pa15"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_CHILD_IDX 132
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_ORD 225

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_SUPPORTS_ORDS \
	226, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa15 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_pinmux 481
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 226

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	224, /* /soc/timers@40000000 */ \
	225, /* /soc/pin-controller@48000000/tim2_ch1_pa15 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm
#define DT_N_NODELABEL_pwm2      DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label "PWM_2"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_STRING_TOKEN PWM_2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim2_ch1_pa15
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_PATH "/soc/timers@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME "timers@40012c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_CHILD_IDX 14
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_ORD 227

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_SUPPORTS_ORDS \
	229, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_label "TIMERS_1"
#define DT_N_S_soc_S_timers_40012c00_P_label_STRING_TOKEN TIMERS_1
#define DT_N_S_soc_S_timers_40012c00_P_label_STRING_UPPER_TOKEN TIMERS_1
#define DT_N_S_soc_S_timers_40012c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 6) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 7)
#define DT_N_S_soc_S_timers_40012c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, reg, 1)
#define DT_N_S_soc_S_timers_40012c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 7)
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40012c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "okay"
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 3)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@48000000/tim1_ch1_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PATH "/soc/pin-controller@48000000/tim1_ch1_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FULL_NAME "tim1_ch1_pa8"

/* Node parent (/soc/pin-controller@48000000) identifier: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PARENT DT_N_S_soc_S_pin_controller_48000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_CHILD_IDX 118
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_ORD 228

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_REQUIRES_ORDS \
	22, /* /soc/pin-controller@48000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_SUPPORTS_ORDS \
	229, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pa8 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_pinmux 257
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PATH "/soc/timers@40012c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD 229

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REQUIRES_ORDS \
	227, /* /soc/timers@40012c00 */ \
	228, /* /soc/pin-controller@48000000/tim1_ch1_pa8 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm
#define DT_N_NODELABEL_pwm1      DT_N_S_soc_S_timers_40012c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label "PWM_1"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label_STRING_TOKEN PWM_1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label_STRING_UPPER_TOKEN PWM_1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_48000000_S_tim1_ch1_pa8
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 16
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 230

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	231, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_label "TIMERS_16"
#define DT_N_S_soc_S_timers_40014400_P_label_STRING_TOKEN TIMERS_16
#define DT_N_S_soc_S_timers_40014400_P_label_STRING_UPPER_TOKEN TIMERS_16
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8)
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1)
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 231

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	230, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label "PWM_16"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_STRING_TOKEN PWM_16
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_STRING_UPPER_TOKEN PWM_16
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 17
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 232

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	21, /* /soc */ \
	24, /* /soc/rcc@58000000 */ \
	35, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	233, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17     DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_label "TIMERS_17"
#define DT_N_S_soc_S_timers_40014800_P_label_STRING_TOKEN TIMERS_17
#define DT_N_S_soc_S_timers_40014800_P_label_STRING_UPPER_TOKEN TIMERS_17
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8)
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1)
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_58000000
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 233

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	232, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label "PWM_17"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_STRING_TOKEN PWM_17
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_STRING_UPPER_TOKEN PWM_17
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_rng_58001000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_58004000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_bt_mon_uart             DT_N_S_soc_S_serial_40008000
#define DT_CHOSEN_zephyr_bt_mon_uart_EXISTS      1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_66000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c0000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions_S_partition_c4000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32wb55rg_nucleo 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32wb_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32wb_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lpuart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_adc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_watchdog 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lptim 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usb 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rng 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32wb55rg_nucleo_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32wb_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_st_stm32wb_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 6
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 2
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 2
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_NUM_OKAY 1
#define DT_N_INST_st_stm32_lpuart_NUM_OKAY 1
#define DT_N_INST_st_stm32_timers_NUM_OKAY 2
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 2
#define DT_N_INST_st_stm32_adc_NUM_OKAY 1
#define DT_N_INST_st_stm32_watchdog_NUM_OKAY 1
#define DT_N_INST_st_stm32_lptim_NUM_OKAY 1
#define DT_N_INST_st_stm32_usb_NUM_OKAY 1
#define DT_N_INST_st_stm32_rng_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 3
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 2
#define DT_N_INST_fixed_clock_NUM_OKAY 2
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 3
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32wb55rg_nucleo(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32wb55rg_nucleo(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32wb55rg_nucleo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32wb55rg_nucleo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_58004000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32wb_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_58004000)
#define DT_FOREACH_OKAY_VARGS_st_stm32wb_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32wb_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32wb_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_58004000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32wb_rcc(fn) fn(DT_N_S_soc_S_rcc_58000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32wb_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_58000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32wb_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32wb_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_58000800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_58000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_48000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48000c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_48000000_S_gpio_48001c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40013800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40008000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lpuart(fn) fn(DT_N_S_soc_S_serial_40008000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lpuart(fn, ...) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lpuart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lpuart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_adc(fn) fn(DT_N_S_soc_S_adc_50040000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_adc(fn, ...) fn(DT_N_S_soc_S_adc_50040000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40003000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lptim(fn) fn(DT_N_S_soc_S_timers_40007c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lptim(fn, ...) fn(DT_N_S_soc_S_timers_40007c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lptim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lptim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usb(fn) fn(DT_N_S_soc_S_usb_40006800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usb(fn, ...) fn(DT_N_S_soc_S_usb_40006800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rng(fn) fn(DT_N_S_soc_S_rng_58001000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rng(fn, ...) fn(DT_N_S_soc_S_rng_58001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000) fn(DT_N_S_memory_20030000) fn(DT_N_S_memory_20038000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_memory_20030000, __VA_ARGS__) fn(DT_N_S_memory_20038000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_memory_20030000) fn(DT_N_S_memory_20038000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_memory_20030000, __VA_ARGS__) fn(DT_N_S_memory_20038000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lse)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_usbphy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_usbphy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_power_states_S_state0) fn(DT_N_S_power_states_S_state1) fn(DT_N_S_power_states_S_state2)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_power_states_S_state2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
